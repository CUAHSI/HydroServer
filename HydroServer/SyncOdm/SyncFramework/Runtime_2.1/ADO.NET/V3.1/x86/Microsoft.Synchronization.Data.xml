<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Synchronization.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Synchronization.SessionProgressEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.SyncAgent.SessionProgress" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SessionProgressEventArgs.#ctor(Microsoft.Synchronization.SyncStage,System.Int32,Microsoft.Synchronization.SyncBatchProgress)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.SessionProgressEventArgs" /> class by using synchronization stage, percent completed, and batch progress parameters.</summary>
      <param name="syncStage">A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</param>
      <param name="percentCompleted">The percentage of changes that have been completed for the current synchronization session.</param>
      <param name="batchProgress">A <see cref="T:Microsoft.Synchronization.SyncBatchProgress" /> object that represents the progress of the current batch of changes that is synchronizing.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SessionProgressEventArgs.BatchProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncBatchProgress" /> object that represents the progress of the current batch of changes that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncBatchProgress" /> object that represents the progress of the current batch of changes that is synchronizing.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SessionProgressEventArgs.PercentCompleted">
      <summary>Gets the percentage of changes that have been completed for the current synchronization session.</summary>
      <returns>The percentage of changes that have been completed for the current synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SessionProgressEventArgs.SyncStage">
      <summary>Gets the <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.SessionStateChangedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.SyncAgent.StateChanged" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SessionStateChangedEventArgs.#ctor(Microsoft.Synchronization.SyncSessionState,Microsoft.Synchronization.Data.SyncSession)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.SessionStateChangedEventArgs" /> class by using session state and session parameters.</summary>
      <param name="sessionState">A <see cref="T:Microsoft.Synchronization.SyncSessionState" /> object that is used to define whether the session is currently synchronizing.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SessionStateChangedEventArgs.SessionState">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncSessionState" /> object that is used to define whether the session is currently synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncSessionState" /> object that is used to define whether the session is currently synchronizing.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SessionStateChangedEventArgs.SyncSession">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.SyncAgent">
      <summary>The <see cref="T:Microsoft.Synchronization.SyncAgent" /> object orchestrates synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.SyncAgent" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.#ctor(Microsoft.Synchronization.SyncProvider,Microsoft.Synchronization.SyncProvider)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.SyncAgent" /> class by using local synchronization provider and remote synchronization provider parameters.</summary>
      <param name="localProvider">A reference to an object derived from <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" />.</param>
      <param name="remoteProvider">A reference to an object derived from <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SyncAgent.Configuration">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncConfiguration" /> object that contains information about tables and synchronization parameters.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncConfiguration" /> object that contains information about tables and synchronization parameters.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.SyncAgent" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.SyncAgent" />, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SyncAgent.LocalProvider">
      <summary>Gets or sets an object derived from <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" /> that is used to communicate with the local data store.</summary>
      <returns>An object derived from <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" />.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> could not be cast to <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" />.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.OnSessionProgress(Microsoft.Synchronization.SessionProgressEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.SyncAgent.SessionProgress" /> event.</summary>
      <param name="value">A <see cref="T:Microsoft.Synchronization.SessionProgressEventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.OnSessionStateChanged(Microsoft.Synchronization.SessionStateChangedEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.SyncAgent.StateChanged" /> event.</summary>
      <param name="value">A <see cref="T:Microsoft.Synchronization.SessionStateChangedEventArgs" /> object that contains event data.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SyncAgent.RemoteProvider">
      <summary>Gets or sets an object derived from <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" /> that is used to communicate with the remote data store.</summary>
      <returns>An object derived from <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> could not be cast to <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</exception>
    </member>
    <member name="E:Microsoft.Synchronization.SyncAgent.SessionProgress">
      <summary>Occurs during synchronization: after metadata is read at the client, after metadata is written, after changes are downloaded, and after changes are uploaded.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.SyncAgent.SessionState">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncSessionState" /> object that is used to define whether the session is currently synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncSessionState" /> object that is used to define whether the session is currently synchronizing.</returns>
    </member>
    <member name="E:Microsoft.Synchronization.SyncAgent.StateChanged">
      <summary>Occurs when there is a change in the synchronization session state.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SyncAgent.Synchronize">
      <summary>Synchronizes data between the local and remote data stores.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncStatistics" /> object that contains statistics for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SyncAgent.SyncStatistics">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncStatistics" /> object that represents statistics for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncStatistics" /> object that represents statistics for a synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.SyncBatchProgress">
      <summary>Represents progress information, including conflict information, for a batch of changes during a synchronization session.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.SyncBatchProgress.#ctor(System.Int32,System.Int32,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.SyncBatchProgress" /> class by using batch number, batch count, more data, and progress parameters.</summary>
      <param name="batchNumber">The number of the batch that is currently being synchronized.</param>
      <param name="batchCount">The total number of batches to synchronize during a session.</param>
      <param name="moreData">Always returns false in this version of the API.</param>
      <param name="progress">An object that the provider supplies with detailed information about synchronization progress.</param>
    </member>
    <member name="P:Microsoft.Synchronization.SyncBatchProgress.BatchCount">
      <summary>Gets the total number of batches to synchronize during a session.</summary>
      <returns>The total number of batches to synchronize during a session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SyncBatchProgress.BatchNumber">
      <summary>Gets the current batch number that the session is processing.</summary>
      <returns>The current batch number that the session is processing.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SyncBatchProgress.MoreData">
      <summary>Gets whether there are more changes to synchronize. This property always returns false in this version of the API.</summary>
      <returns>Always returns false in this version of the API.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.SyncBatchProgress.Progress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that the provider supplies, with detailed information about synchronization progress.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that the provider supplies, with detailed information about synchronization progress.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.SyncSessionState">
      <summary>Defines the state that a synchronization session is in.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncSessionState.Ready">
      <summary>The session is ready to synchronize changes.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncSessionState.Synchronizing">
      <summary>The session is currently synchronizing changes.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.SyncStage">
      <summary>Defines the different phases of synchronization from the perspective of the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.ReadingSchema">
      <summary>Reading schema information at the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.CreatingSchema">
      <summary>Creating tables at the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.ReadingMetadata">
      <summary>Reading metadata tables at the client</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.CreatingMetadata">
      <summary>Creating metadata tables at the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.DeletingMetadata">
      <summary>Removing metadata for one or more tables at the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.WritingMetadata">
      <summary>Updating metadata tables at the client</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.UploadingChanges">
      <summary>Sending changes to the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.DownloadingChanges">
      <summary>Receiving changes from the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.ApplyingInserts">
      <summary>Applying inserts to the client or server store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.ApplyingUpdates">
      <summary>Applying updates to the client or server store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.ApplyingDeletes">
      <summary>Applying deletes to the client or server store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.GettingInserts">
      <summary>Selecting inserts from the client or server store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.GettingUpdates">
      <summary>Selecting updates from the client or server store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.SyncStage.GettingDeletes">
      <summary>Selecting deletes from the client or server store.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.AnchorException">
      <summary>The exception that is thrown for errors related to anchors, including the failure to return an anchor.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.AnchorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.AnchorException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.AnchorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.AnchorException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.AnchorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.AnchorException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.AnchorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.AnchorException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.AnchorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.AnchorException.GroupMetadata">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata, such as the names of the tables in the synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata for the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.AnchorException.Session">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ApplyAction">
      <summary>Specifies the options for processing a row when the row cannot be applied during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ApplyAction.Continue">
      <summary>Continue processing, and add the row to the list of conflicts that are defined in the <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> object. This is the default behavior.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ApplyAction.RetryApplyingRow">
      <summary>Try to apply the row one more time.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ApplyAction.RetryWithForceWrite">
      <summary>Force the row to be applied by using logic that is included in synchronization adapter commands.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ApplyAction.RetryNextSync">
      <summary>Store the row as an exception, and try to apply the row during the next synchronization session. Only valid for peer to peer synchronization.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.ApplyChangeFailed" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.ApplyChangeFailed" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.#ctor(Microsoft.Synchronization.Data.SyncTableMetadata,Microsoft.Synchronization.Data.SyncConflict,System.Exception,Microsoft.Synchronization.Data.SyncSession,Microsoft.Synchronization.Data.SyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs" /> class by using table metadata, conflict, error, session, context, connection, and transaction parameters.</summary>
      <param name="tableMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncTableMetaData" /> object that contains metadata, such as the direction of synchronization.</param>
      <param name="syncConflict">A <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> object that contains metadata about any conflicts that occurred during synchronization.</param>
      <param name="error">An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="syncContext">A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes, and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were attempted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tableMetadata" />, <paramref name="syncConflict" />, <paramref name="syncSession" />, or <paramref name="syncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Action">
      <summary>Gets or sets an <see cref="T:Microsoft.Synchronization.Data.ApplyAction" /> enumeration value that specifies the action to handle the conflict.</summary>
      <returns>An <see cref="T:Microsoft.Synchronization.Data.ApplyAction" /> enumeration value that specifies the action to handle the conflict.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Conflict">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> object that contains data and metadata for the row being applied and for the existing row in the data store that caused the failure.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> object that contains conflict data and metadata.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes were attempted during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes, and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes, and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Error">
      <summary>Gets an <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</summary>
      <returns>An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables, such as the ID of the client that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.TableMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTableMetaData" /> object that contains metadata about the table, such as anchor values and the direction of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTableMetaData" /> object that contains metadata about the table, such as anchor values and the direction of synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyChangeFailedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were attempted.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were attempted.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ApplyingChangesEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.ApplyingChanges" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.ApplyingChanges" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.SyncSession,Microsoft.Synchronization.Data.SyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ApplyingChangesEventArgs" /> class by using group metadata, data set, session, context, connection, and transaction parameters.</summary>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the client or server database.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="syncContext">A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupMetadata" />, <paramref name="dataSet" />, <paramref name="syncSession" />, or <paramref name="syncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.Changes">
      <summary>Gets a <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied for all tables in the synchronization group.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are applied during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.GroupMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata, such as the names of the tables in the synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata for the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables, such as the ID of the client that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyingChangesEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyMetadataFailed" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.#ctor(System.Data.DataRow,System.Exception,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs" /> class by using data row, exception, session, context, connection, and transaction parameters.</summary>
      <param name="change">A <see cref="T:System.Data.DataRow" /> object that contains the data row where the error occurred.</param>
      <param name="error">An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to metadata were attempted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="change" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Change">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> object that contains the data row where the error occurred.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> object that contains the data row where the error occurred.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes were attempted during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Error">
      <summary>Gets an <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</summary>
      <returns>An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.RetryTransaction">
      <summary>Gets or sets whether to retry the transaction or roll back and fail.</summary>
      <returns>true to retry the transaction; false to roll back and fail.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to metadata were attempted.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to metadata were attempted.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ChangesAppliedEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.ChangesApplied" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.ChangesApplied" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession,Microsoft.Synchronization.Data.SyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ChangesAppliedEventArgs" /> class by using group metadata, session, context, connection, and transaction parameters.</summary>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="syncContext">A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupMetadata" />, <paramref name="syncSession" />, or <paramref name="syncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are applied during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.GroupMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata, such as the names of the tables in the synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata for the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables, such as the ID of the client that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesAppliedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ChangesSelectedEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.ChangesSelected" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.ChangesSelected" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession,Microsoft.Synchronization.Data.SyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ChangesSelectedEventArgs" /> class by using group metadata, session, context, connection, and transaction parameters.</summary>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="syncContext">A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupMetadata" />, <paramref name="syncSession" />, or <paramref name="syncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.GroupMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata, such as the names of the tables in the synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata for the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables, such as the ID of the client that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ChangesSelectedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ChangeTrackingModel">
      <summary>This enumeration is deprecated. Defines the way in which changes are tracked in the peer database. </summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ChangeTrackingModel.Decoupled">
      <summary>All tracking columns are in a separate table.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ChangeTrackingModel.Coupled">
      <summary>Tracking columns are in the base table, and a tombstone table is used to track deletes.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ClientSyncProvider">
      <summary>Abstracts a client synchronization provider that communicates with the client data store and shields the synchronization agent from the specific implementation of the data store.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.ApplyChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, applies inserts, updates, and deletes for a synchronization group to the client database when given group metadata, a data set, and synchronization session parameters.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the client database.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.BeginTransaction(Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, called by the <see cref="T:Microsoft.Synchronization.SyncAgent" /> to begin a transaction. This allows the agent to commit a set of changes as an atomic unit.</summary>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.ClientSyncProvider.ClientId">
      <summary>When overridden in a derived class, gets or sets the GUID that Synchronization Services uses to identify the client database.</summary>
      <returns>A GUID that identifies the client database.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.CreateSchema(Microsoft.Synchronization.Data.SyncTable,Microsoft.Synchronization.Data.SyncSchema)">
      <summary>When overridden in a derived class, creates a table schema at the client database if the schema does not exist.</summary>
      <param name="syncTable">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that will be created, such as the direction of synchronization.</param>
      <param name="syncSchema">A <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object. This is a <see cref="T:System.Data.DataSet" /> object that contains schema information for the table that will be created.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:Microsoft.Synchronization.Data.ClientSyncProvider" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.EndTransaction(System.Boolean,Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, called by the <see cref="T:Microsoft.Synchronization.SyncAgent" /> to end a transaction. This allows the agent to commit a set of changes as an atomic unit.</summary>
      <param name="commit">true to commit the transaction; false to roll back the transaction.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.GetChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, gets inserts, updates, and deletes for the specified synchronization group and session that occurred at the client since the last time <see cref="M:Microsoft.Synchronization.SyncAgent.Synchronize" /> or <see cref="M:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.AcceptChanges(System.String)" /> was called.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains synchronization data and metadata.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.GetTableReceivedAnchor(System.String)">
      <summary>When overridden in a derived class, gets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was received from the server.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was received from the server.</returns>
      <param name="tableName">The name of the table for which to get the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.GetTableSentAnchor(System.String)">
      <summary>When overridden in a derived class, gets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was sent from the client.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was sent from the client.</returns>
      <param name="tableName">The name of the table for which to get the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.SetTableReceivedAnchor(System.String,Microsoft.Synchronization.Data.SyncAnchor)">
      <summary>When overridden in a derived class, sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was received from the server.</summary>
      <param name="tableName">The name of the table for which to get the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
      <param name="anchor">A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object, with the anchor value to persist.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ClientSyncProvider.SetTableSentAnchor(System.String,Microsoft.Synchronization.Data.SyncAnchor)">
      <summary>When overridden in a derived class, sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time that the last change was sent from the client.</summary>
      <param name="tableName">The name of the table for which to get the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
      <param name="anchor">A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object, with the anchor value to persist.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ConflictType">
      <summary>Defines the types of conflicts that can occur during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.Unknown">
      <summary>The client synchronization provider can classify all conflicts that it encounters, but the server synchronization provider cannot. Therefore, some conflicts are classified as <see cref="F:Microsoft.Synchronization.Data.ConflictType.Unknown" />.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.ErrorsOccurred">
      <summary>The client or server store (typically a database) threw an exception while applying a change.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerUpdate">
      <summary>The client and the server updated the same row.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerDelete">
      <summary>The server deleted a row that the client updated.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.ClientDeleteServerUpdate">
      <summary>The client deleted a row that the server updated.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ConflictType.ClientInsertServerInsert">
      <summary>The client and server both inserted a row that has the same primary key value. This caused a primary key violation.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.CreatingSchemaEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.CreatingSchema" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.CreatingSchemaEventArgs.#ctor(Microsoft.Synchronization.Data.SyncTable,Microsoft.Synchronization.Data.SyncSchema,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.CreatingSchemaEventArgs" /> class by using synchronization table, schema, connection, and transaction parameters.</summary>
      <param name="syncTable">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that is being created.</param>
      <param name="syncSchema">A <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object. This is a <see cref="T:System.Data.DataSet" /> that contains schema information for the table that is being created.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema will be created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncTable" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.CreatingSchemaEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which the schema will be created.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.CreatingSchemaEventArgs.Schema">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object for the table that is being created.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object for the table that is being created.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.CreatingSchemaEventArgs.Table">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that is being created.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that is being created.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.CreatingSchemaEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema will be created.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema will be created.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DataColumnSurrogate">
      <summary>Represents a surrogate of a <see cref="T:System.Data.DataColumn" /> object, which Sync Framework uses during custom binary serialization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataColumnSurrogate.#ctor(System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> class.</summary>
      <param name="dc">The <see cref="T:System.Data.DataColumn" /> object for which to create a surrogate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataColumnSurrogate.ColumnName">
      <summary>Gets or sets the name of the column that the <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> object represents.</summary>
      <returns>The name of the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataColumnSurrogate.ConvertToDataColumn">
      <summary>Constructs a <see cref="T:System.Data.DataColumn" /> object based on a <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" /> object that is constructed from a <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataColumnSurrogate.DataType">
      <summary>Gets or sets the data type of the column that the <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> object represents.</summary>
      <returns>The data type of the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DataSetSurrogate">
      <summary>Represents a surrogate of a <see cref="T:System.Data.DataSet" /> object, which Sync Framework uses during custom binary serialization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSetSurrogate.#ctor(System.Data.DataSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> class.</summary>
      <param name="ds">The <see cref="T:System.Data.DataSet" /> object for which to create a surrogate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ds" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSetSurrogate.ConvertToDataSet">
      <summary>Constructs a <see cref="T:System.Data.DataSet" /> object based on a <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object.</summary>
      <returns>A <see cref="T:System.Data.DataColumn" /> object that is constructed from a <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSetSurrogate.DatasetName">
      <summary>Gets or sets the name of the data set that the <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object represents.</summary>
      <returns>The name of the data set.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSetSurrogate.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" />. </summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSetSurrogate.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> and optionally releases the managed resources. </summary>
      <param name="cleanup">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSetSurrogate.GetDataTableSurrogates">
      <summary>Gets an array of <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> objects that comprise the data set that is represented by the <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object.</summary>
      <returns>An array of <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> objects.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSetSurrogate.Locale">
      <summary>Gets or sets the locale information used to compare strings within the table.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that contains data about the user's machine locale.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DataSyncException">
      <summary>The base class for exceptions that are thrown during synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSyncException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataSyncException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataSyncException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSyncException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataSyncException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSyncException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataSyncException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSyncException.ErrorNumber">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncErrorNumber" /> enumeration value for the exception.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncErrorNumber" /> enumeration value for the exception.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataSyncException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSyncException.HelpLink">
      <summary>Gets or sets the URL for a help page with information about the exception.</summary>
      <returns>A URL for a help page.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSyncException.SyncSource">
      <summary>Gets or sets the name of the component that threw the exception.</summary>
      <returns>The name of the component that threw the exception.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataSyncException.SyncStage">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the stage of synchronization during which the error occurred.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the stage of synchronization during which the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DataTableSurrogate">
      <summary>Represents a surrogate of a <see cref="T:System.Data.DataTable" /> object, which Sync Framework uses during custom binary serialization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> class.</summary>
      <param name="dt">The <see cref="T:System.Data.DataTable" /> object for which to create a surrogate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dt" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> and optionally releases the managed resources.</summary>
      <param name="cleanup">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.GetDataColumnSurrogates">
      <summary>Gets an array of <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> objects that comprise the table that is represented by the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> object.</summary>
      <returns>An array of <see cref="T:Microsoft.Synchronization.Data.DataColumnSurrogate" /> objects.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.GetRecords">
      <summary>Gets an array of objects that represent the columns and rows of data in the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> object.</summary>
      <returns>An array of objects that represent the columns and rows of data.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataTableSurrogate.Locale">
      <summary>Gets or sets the locale information used to compare strings within the table.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> object that contains data about the user's machine locale.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataTableSurrogate.MinimumCapacity">
      <summary>Gets or sets the initial starting size for this table.</summary>
      <returns>The initial starting size in rows of this table.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.ReadDataIntoDataTable(System.Data.DataTable)">
      <summary>Copies the table schema from a <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> object into a <see cref="T:System.Data.DataTable" /> object.</summary>
      <param name="dt">The <see cref="T:System.Data.DataTable" /> object into which the data should be copied.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DataTableSurrogate.ReadSchemaIntoDataTable(System.Data.DataTable)">
      <summary>Copies the table data from a <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> object into a <see cref="T:System.Data.DataTable" /> object.</summary>
      <param name="dt">The <see cref="T:System.Data.DataTable" /> object into which the schema should be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dt" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataTableSurrogate.RowStates">
      <summary>Gets or sets an array that represents the state of each row in the table.</summary>
      <returns>A <see cref="T:System.Collections.BitArray" /> object that represents whether a row is in one of four states: unchanged, added, modified, or deleted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DataTableSurrogate.TableName">
      <summary>Gets or sets the name of the table that the <see cref="T:Microsoft.Synchronization.Data.DataTableSurrogate" /> object represents.</summary>
      <returns>The name of the table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyChangeFailed" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncConflict,System.Exception,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs" /> class by using table metadata, conflict, error, session, context, connection, and transaction parameters.</summary>
      <param name="dbSyncConflict">A <see cref="T:Microsoft.Synchronization.Data.DbSyncConflict" /> object that contains metadata about any conflicts that occurred during synchronization.</param>
      <param name="error">An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</param>
      <param name="dbSyncSession">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="dbSyncContext">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were tried.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dbSyncConflict" />, <paramref name="dbSyncSession" />, or <paramref name="dbSyncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Action">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ApplyAction" /> enumeration value that specifies the action to handle the conflict.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ApplyAction" /> enumeration value that specifies the action to handle the conflict.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Conflict">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncConflict" /> object that contains data and metadata for the row being applied and for the existing row in the database that caused the failure.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncConflict" /> object that contains conflict data and metadata.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes were tried during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Error">
      <summary>Gets an <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</summary>
      <returns>An <see cref="T:System.Exception" /> object that contains metadata about any exceptions that occurred during synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were tried.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables were tried.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyingChanges" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs" /> class by using scope metadata, DataSet, session, context, connection, and transaction parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="changes">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the peer database.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetaData" />, <paramref name="changes" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs" /> class by using scope metadata, DataSet, session, context, connection, transaction, and batch parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="changes">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the peer database.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</param>
      <param name="isLastBatch">Indicates whether the current batch is the last batch of changes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetaData" />, <paramref name="changes" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.Changes">
      <summary>Gets a <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied for all tables in the synchronization group.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are applied during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.IsLastBatch">
      <summary>Gets or sets whether the current batch is the last batch of changes.</summary>
      <returns>True if the current batch is the last batch of changes; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.ScopeMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbApplyingChangesEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbBatchAppliedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchApplied" /> event.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchAppliedEventArgs.CurrentBatchNumber">
      <summary>Gets the number of the batch that was most recently applied by the provider.</summary>
      <returns>The number of the batch that was most recently applied by the provider.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchAppliedEventArgs.TotalBatchesToApply">
      <summary>Gets the total number of change batches to apply during this synchronization session.</summary>
      <returns>The total number of change batches to apply during this synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchSpooled" /> event.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs.BatchFileName">
      <summary>Gets or sets the name of the file to which spooled changes are written.</summary>
      <returns>The name of the file to which spooled changes are written.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs.CurrentBatchNumber">
      <summary>Gets the number of the batch that was most recently written to the spooling file.</summary>
      <returns>The number of the batch that was most recently written to the spooling file.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs.CurrentBatchTableWatermarks">
      <summary>Gets the table name and maximum tickcount value for each table that has changes in the current batch.</summary>
      <returns>The table name and maximum tickcount value for each table that has changes in the current batch.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs.DataCacheSize">
      <summary>Gets the size of the current batch.</summary>
      <returns>The size of the current batch.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBatchSpooledEventArgs.TotalBatchesSpooled">
      <summary>Gets or sets the total number of change batches that were spooled to disk when the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchSpooled" /> event was raised.</summary>
      <returns>The total number of change batches that were spooled to disk when the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchSpooled" /> event was raised.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbBeginSnapshotInitializationEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeSyncProvider.BeginSnapshotInitialization" /> event.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbBeginSnapshotInitializationEventArgs.ScopeName">
      <summary>Gets the name of the scope for which initialization is required.</summary>
      <returns>The name of the scope for which initialization is required.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesApplied" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs" /> class by using scope metadata, session, context, connection, and transaction parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetaData" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are applied during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.ScopeMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesAppliedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesSelected" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs" /> class by using scope metadata, session, context, connection, and transaction parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetadata" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are selected during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.ScopeMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> object that contains metadata, such as synchronization knowledge.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> object that contains metadata, such as synchronization knowledge.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbConflictType">
      <summary>Defines the types of conflicts that can occur during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.ErrorsOccurred">
      <summary>The peer database threw an exception while applying a change.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalUpdateRemoteUpdate">
      <summary>The local and remote peers both updated the same row.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalUpdateRemoteDelete">
      <summary>The local peer updated a row that the remote peer deleted.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalDeleteRemoteUpdate">
      <summary>The local peer deleted a row that the remote peer updated.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalInsertRemoteInsert">
      <summary>The local and remote peers both inserted a row that has the same primary key value. This caused a primary key violation.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalDeleteRemoteDelete">
      <summary>The local and remote peers both deleted the same row.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConflictType.LocalCleanedupDeleteRemoteUpdate">
      <summary>The local peer deleted a row that the remote peer updated, and the metadata for that row was cleaned up.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbConnectionFailureAction">
      <summary>Represents the action taken in response to the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.DbConnectionFailure" /> event, which occurs when the database connection fails during change application.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConnectionFailureAction.RetrySync">
      <summary>Tries again to reconnect to the database and commit changes after the database connection fails.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbConnectionFailureAction.AbortSync">
      <summary>Stops synchronization when the database connection fails.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.DbConnectionFailure" /> event, which occurs when the database connection fails during change application.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs.#ctor(System.Exception,System.Int32,Microsoft.Synchronization.Data.DbConnectionFailureAction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs" /> class with the specified exception, number of retries, and action to take in response to the failure.</summary>
      <param name="failureException">The exception that indicates the cause of the failure.</param>
      <param name="retryCount">The number of retries that have been performed for the apply transaction.</param>
      <param name="action">The action that will be taken in response to the failure.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs.Action">
      <summary>Gets or sets the action that is taken in response to the failure of a connection to the database.</summary>
      <returns>The action that is taken if the database connection fails.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs.FailureException">
      <summary>Gets the exception that indicates the cause of the failure.</summary>
      <returns>The exception that indicates the cause of the failure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbConnectionFailureEventArgs.RetryCount">
      <summary>Gets the number of retries that have already been performed for the apply transaction.</summary>
      <returns>The number of retries that have already been performed for the apply transaction.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbEndSnapshotInitializationEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeSyncProvider.EndSnapshotInitialization" /> event.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbEndSnapshotInitializationEventArgs.InitializationStatistics">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics" /> object that contains session-level statistics, such as the number of tables that were initialized.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics" /> object that contains session-level statistics.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbEndSnapshotInitializationEventArgs.TableInitializationStatistics">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics" /> object that contains table-level statistics, such as the number of rows in a table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics" /> object that contains table-level statistics.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbEndSnapshotInitializationEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the snapshot initialization process ran.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the snapshot initialization process ran.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbMetadataSyncException">
      <summary>The exception that is thrown for errors that occur while creating or reading table metadata.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMetadataSyncException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMetadataSyncException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMetadataSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMetadataSyncException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMetadataSyncException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMetadataSyncException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMetadataSyncException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMetadataSyncException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMetadataSyncException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbMetadataSyncException.TableName">
      <summary>Gets or sets the name of the table for which the error occurred.</summary>
      <returns>The name of the table for which the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbMissingCommandException">
      <summary>The exception that is thrown if a required command for a provider or an adapter is missing.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMissingCommandException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMissingCommandException" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMissingCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMissingCommandException" /> class by using serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMissingCommandException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMissingCommandException" /> class that contains the specified error message.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMissingCommandException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbMissingCommandException" /> class that contains a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
      <param name="inner">The exception that caused the current exception, or a null when no inner exception is specified.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbMissingCommandException.CommandName">
      <summary>Gets or sets the name of the command that is missing.</summary>
      <returns>The name of the command that is missing.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbMissingCommandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbMissingCommandException.TableName">
      <summary>Gets or sets the name of the table for which a command is missing.</summary>
      <returns>The name of the table for which a command is missing.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbNotProvisionedException">
      <summary>Occurs when a method requires the database to contain synchronization metadata and the database has not yet been provisioned.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbNotProvisionedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbNotProvisionedException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbNotProvisionedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbNotProvisionedException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbNotProvisionedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbNotProvisionedException" /> class with the specified message.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbNotProvisionedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbNotProvisionedException" /> class with the specified message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">The exception instance that caused the current exception, or null when no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbNotProvisionedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbOutdatedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncPeerOutdated" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedEventArgs.#ctor(Microsoft.Synchronization.SyncKnowledge,Microsoft.Synchronization.SyncKnowledge,Microsoft.Synchronization.SyncKnowledge,Microsoft.Synchronization.Data.DbSyncSession)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbOutdatedEventArgs" /> class by using local knowledge, local cleanup knowledge, remote knowledge, and session parameters.</summary>
      <param name="localSyncKnowledge">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the local provider.</param>
      <param name="localCleanupKnowledge">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the cleanup knowledge of the local provider.</param>
      <param name="remoteSyncKnowledge">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the remote provider.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="session" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedEventArgs.Action">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncAction" /> enumeration value for the action to handle the outdated peer.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncAction" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedEventArgs.LocalCleanupKnowledge">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the local provider.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the local provider.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedEventArgs.LocalSyncKnowledge">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the cleanup knowledge of the local provider.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the cleanup knowledge of the local provider.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedEventArgs.RemoteSyncKnowledge">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the remote provider.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge of the remote provider.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbOutdatedSyncAction">
      <summary>Defines the options for processing a synchronization request from a peer that has outdated metadata.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbOutdatedSyncAction.PartialSync">
      <summary>Continue to synchronize, but write any issues to the metadata.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbOutdatedSyncAction.AbortSync">
      <summary>Reject the synchronization request.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbOutdatedSyncException">
      <summary>The exception that is thrown for errors that occur when trying to synchronize a peer that has outdated metadata.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedSyncException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedSyncException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedSyncException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbOutdatedSyncException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedSyncException.MissingCleanupKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.ForgottenKnowledge" /> object that contains metadata about cleanup knowledge that the peer is missing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.ForgottenKnowledge" /> object that contains metadata about cleanup knowledge that the peer is missing.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedSyncException.OutdatedPeerSyncKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains metadata about knowledge the peer has that is outdated.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains metadata about knowledge the peer has that is outdated.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbOutdatedSyncException.SyncProviderPosition">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbPartiallyProvisionedException">
      <summary>Occurs when provisioning fails and the provisioning transaction cannot be rolled back, which leaves the database in an inconsistent state.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbPartiallyProvisionedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbPartiallyProvisionedException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbPartiallyProvisionedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbPartiallyProvisionedException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbPartiallyProvisionedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbPartiallyProvisionedException" /> class with the specified message.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbPartiallyProvisionedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbPartiallyProvisionedException" /> class with the specified message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">The exception instance that caused the current exception, or null when no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbPartiallyProvisionedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbProvisioningException">
      <summary>The exception that is thrown for errors that occur when attempting to provision a database to participate in synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbProvisioningException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbProvisioningException" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbProvisioningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbProvisioningException" /> class by using serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbProvisioningException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbProvisioningException" /> class that contains the specified error message.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbProvisioningException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbProvisioningException" /> class that contains a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
      <param name="inner">The exception that caused the current exception, or a null when no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbProvisioningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbResolveAction">
      <summary>Specifies the options for resolving any conflicts that occur during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbResolveAction.FireEvent">
      <summary>Raise the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyChangeFailed" /> event.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbResolveAction.RemoteWins">
      <summary>Overwrite the row at the local peer with the row from the remote peer.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbResolveAction.LocalWins">
      <summary>Overwrite the row at the remote peer with the row from the local peer.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSchemaException">
      <summary>The exception that is thrown for errors that occur while creating or reading table schema.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSchemaException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSchemaException" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSchemaException" /> class by using serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSchemaException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSchemaException" /> class that contains the specified error message.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSchemaException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSchemaException" /> class that contains a specified error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The error message that states the reason for the exception.</param>
      <param name="inner">The exception that caused the current exception, or a null when no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSchemaException.TableName">
      <summary>Gets or sets the name of the table for which the error occurred.</summary>
      <returns>The name of the table for which the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SelectingChanges" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs" /> class by using scope metadata, session, context, connection, and transaction parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetadata" />, <paramref name="session" />, or <paramref name="context" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata,Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncContext,System.Data.IDbConnection,System.Data.IDbTransaction,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs" /> class by using scope metadata, session, context, connection, transaction, and table name parameters.</summary>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</param>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="context">A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</param>
      <param name="tables">A collection of the names of tables from which changes will be selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scopeMetadata" />, <paramref name="session" />, <paramref name="context" />, or <paramref name="tables" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are selected during synchronization.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> object that contains data changes, anchor values, and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.ScopeMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata, such as synchronization knowledge.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.Tables">
      <summary>Gets a collection of the names of tables from which changes will be selected.</summary>
      <returns>A collection of the names of tables from which changes will be selected.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics">
      <summary>Represents a set of session-level statistics about the snapshot initialization of a client database.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics.EndTime">
      <summary>Gets or sets the date and time at which the snapshot initialization process ended.</summary>
      <returns>The date and time at which the snapshot initialization process ended.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics.StartTime">
      <summary>Gets or sets the date and time at which the snapshot initialization process started.</summary>
      <returns>The date and time at which the snapshot initialization process started.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics.TablesInitialized">
      <summary>Gets or sets the total number of tables that were initialized for the scope.</summary>
      <returns>The total number of tables that were initialized for the scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationStatistics.TotalTables">
      <summary>Gets the total number of tables in the scope.</summary>
      <returns>The total number of tables in the scope.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics">
      <summary>Represents a set of table-level statistics about the snapshot initialization of a client database.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics.EndTime">
      <summary>Gets or sets the date and time at which the snapshot initialization process ended for the table.</summary>
      <returns>The date and time at which the snapshot initialization process ended for the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics.RowsInitialized">
      <summary>Gets or sets the total number of rows that were initialized in the table.</summary>
      <returns>The total number of rows that were initialized in the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics.StartTime">
      <summary>Gets the date and time at which the snapshot initialization process started for the table.</summary>
      <returns>The date and time at which the snapshot initialization process started for the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics.TableName">
      <summary>Gets the name of the table that was initialized.</summary>
      <returns>The name of the table that was initialized.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSnapshotInitializationTableStatistics.TotalRows">
      <summary>Gets or sets the total number of rows in the table.</summary>
      <returns>The total number of rows in the table.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncAdapter">
      <summary>Represents a set of commands that are used to retrieve and apply data and metadata changes at the local peer database. </summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> class by using a table name parameter.</summary>
      <param name="tableName">The name of the table in the local database.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> class by using local and remote table name parameters.</summary>
      <param name="tableName">The name of the table in the local database.</param>
      <param name="remoteTableName">The name of the table in the remote database.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.ColumnMappings">
      <summary>Gets a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> objects for the table. These objects map columns in a local table to the corresponding columns in a remote table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> object for the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.DeleteCommand">
      <summary>Gets or sets the query or stored procedure that is used to delete data from the base table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.DeleteMetadataCommand">
      <summary>Gets or sets the query or stored procedure that is used to delete metadata from the metadata table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.Description">
      <summary>Gets or sets a description for the synchronization adapter.</summary>
      <returns>The description of the synchronization adapter.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapter.DisposeCommand(System.IDisposable)">
      <summary>Disposes the specified command object that implements the <see cref="T:System.IDisposable" /> interface.</summary>
      <param name="command">The command object to dispose.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.InsertCommand">
      <summary>Gets or sets the query or stored procedure that is used to insert data into the base table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.InsertMetadataCommand">
      <summary>Gets or sets the query or stored procedure that is used to insert metadata into the metadata table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.RemoteTableName">
      <summary>Gets or sets the name of the table at the remote peer for which to create the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</summary>
      <returns>The name of the table at the remote peer for which to create the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.RowIdColumns">
      <summary>Gets a collection of the names of the columns that make up the unique ID for each row in the table.</summary>
      <returns>A collection of the names of the columns that make up the unique ID for each row in the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.SelectIncrementalChangesCommand">
      <summary>Gets or sets the query or stored procedure that is used to select incremental changes from the local database.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.SelectMetadataForCleanupCommand">
      <summary>Gets or sets the query or stored procedure that is used to cleanup rows in metadata tables.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.SelectRowCommand">
      <summary>Gets or sets the query or stored procedure that is used to select a specific row given an ID for that row.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.TableName">
      <summary>Gets or sets the name of the table at the peer for which to create the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</summary>
      <returns>The name of the table at the peer for which to create the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapter.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.UpdateCommand">
      <summary>Gets or sets the query or stored procedure that is used to update data in the base table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapter.UpdateMetadataCommand">
      <summary>Gets or sets the query or stored procedure that is used to update metadata in the metadata table.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection">
      <summary>A collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapterCollection.Contains(System.String)">
      <summary>Determines whether a specific <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object is in the collection when given a table name.</summary>
      <returns>true if the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object exists; otherwise, false.</returns>
      <param name="tableName">The name of the table. Specify the name to determine whether the associated <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object is in <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" />.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapterCollection.IndexOf(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object when given a table name, and returns the zero-based index of the first occurrence within the whole collection.</summary>
      <returns>The index position of <paramref name="tableName" /> if that string is found; otherwise -1 if it is not.</returns>
      <param name="tableName">The name of the table. Specify the name to get the index of the associated <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object in <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncAdapterCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object from the collection when given a table name.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object for the specified table.</returns>
      <param name="tableName">The name of the table. Specify the name to get the associated <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object from <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" />.</param>
      <exception cref="T:System.ArgumentNullExcpeption">
        <paramref name="tableName" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" /> object did not contain a table with name <paramref name="tableName" />.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncAdapterCollection.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object from the collection when given a table name.</summary>
      <param name="tableName">The name of the table. Specify the name to remove the associated <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> object from <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" />.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncBatchInfo">
      <summary>Represents a batch header file that contains metadata about the data contained in a synchronization batch.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncBatchInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.DataCacheSize">
      <summary>Gets or sets the in-memory size of the current batch.</summary>
      <returns>The in-memory size of the current batch.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.DataSetSurrogate">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object, which contains the in-memory data set that represents the batch.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DataSetSurrogate" /> object that represents the batch.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.Data.DbSyncBatchInfo" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.Data.DbSyncBatchInfo" /> and optionally releases the managed resources.</summary>
      <param name="cleanup">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.GetLearnedKnowledge">
      <summary>Gets the synchronization knowledge that is learned by the destination after it applies this batch.</summary>
      <returns>A byte array that represents the learned knowledge.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.Id">
      <summary>Gets or sets an ID that uniquely identifies the batch.</summary>
      <returns>An ID that uniquely identifies the batch.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.IsLastBatch">
      <summary>Gets or sets whether the current batch is the last batch of the synchronization session.</summary>
      <returns>true if this is the last batch; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.SequenceNumber">
      <summary>Gets or sets the sequence number of the batch at the source provider so that the destination provider processes batches in the correct order.</summary>
      <returns>The sequence number of the batch at the source provider.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.SetLearnedKnowledge(System.Byte[])">
      <summary>Sets the synchronization knowledge that is learned by the destination after it applies this batch.</summary>
      <param name="knowledgeBytes">A byte array that represents the learned knowledge.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="knowledgeBytes" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncBatchInfo.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncBatchInfo" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncBatchInfo" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncBatchInfo.Version">
      <summary>Represents the version of Sync Framework that generated the batch file.</summary>
      <returns>The version of Sync Framework that generated the batch file.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncColumnDescription">
      <summary>Represents the schema of a column that is included in the <see cref="P:Microsoft.Synchronization.Data.DbSyncTableDescription.Columns" /> list of a <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> object. This is used during database provisioning.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> class for a column that has the specified name and data type.</summary>
      <param name="columnName">The name of the column.</param>
      <param name="type">The data type of the column.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> or <paramref name="type" /> is a null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> or <paramref name="type" /> is empty.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementSeed">
      <summary>Gets or sets the starting value for a column that automatically increments its value when new rows are inserted into the table.</summary>
      <returns>The starting value for an autoincrement column.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementSeedSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementSeed" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementSeed" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementStep">
      <summary>Gets or sets the increment step value for a column that automatically increments its value when new rows are inserted into the table.</summary>
      <returns>The increment step value for an autoincrement column.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementStepSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementStep" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.AutoIncrementStep" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.DefaultValue">
      <summary>Gets or sets the default value for the column when new rows are created.</summary>
      <returns>The default value for the column if it is set; otherwise, an empty string.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.DefaultValueSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.DefaultValue" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.DefaultValue" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsNullable">
      <summary>Gets or sets a value that indicates whether null values are allowed in this column.</summary>
      <returns>true if null values are allowed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsNullableSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsNullable" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsNullable" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsPrimaryKey">
      <summary>Gets or sets whether this column is part of the primary key for the table.</summary>
      <returns>true if this column is part of the primary key for the table; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsPrimaryKeySpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsPrimaryKey" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.IsPrimaryKey" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.ParameterName">
      <summary>Gets or sets the name of the parameter that is used to represent this column in synchronization queries.</summary>
      <returns>The name of the parameter that is used to represent this column in synchronization queries.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Precision">
      <summary>Gets or sets the precision for the column if the data type is numeric.</summary>
      <returns>The precision for the column if it is specified; otherwise -1.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.PrecisionSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Precision" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Precision" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.QuotedName">
      <summary>Gets the name of the column with database-specific delimiters.</summary>
      <returns>The name of the column with database-specific delimiters.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Scale">
      <summary>Gets or sets the scale for the column if the data type is numeric and has a decimal component.</summary>
      <returns>The scale for the column if it is specified; otherwise -1.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.ScaleSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Scale" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Scale" />; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Size">
      <summary>Gets or sets the size of the column.</summary>
      <returns>The size of the column if it is specified; otherwise null.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.SizeSpecified">
      <summary>Gets or sets whether a value is specified for the <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Size" /> property.</summary>
      <returns>true if a value is specified for <see cref="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Size" />; otherwise false.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnDescription.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.Type">
      <summary>Gets or sets the data type of the column.</summary>
      <returns>The data type of the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescription.UnquotedName">
      <summary>Gets or sets the name of the column without database-specific delimiters.</summary>
      <returns>The name of the column without database-specific delimiters.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncColumnDescriptionCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescriptionCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnDescriptionCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> object with the specified name from the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> object.</returns>
      <param name="columnName">The name of the column to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="columnName" /> is empty.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncColumnMapping">
      <summary>Maps a column in the local database to a column in the remote database.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMapping.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> class by using local column and remote column parameters.</summary>
      <param name="localColumn">The name of the column in the local database.</param>
      <param name="remoteColumn">The name of the column in the remote database.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnMapping.LocalColumn">
      <summary>Gets or sets the name of the column in the local database.</summary>
      <returns>The name of the column in the local database.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a unique column name.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncColumnMapping.RemoteColumn">
      <summary>Gets or sets the name of the column in the remote database.</summary>
      <returns>The name of the column in the remote database.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMapping.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object that has the specified local and remote column names to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object that has the specified column names.</returns>
      <param name="localColumn">The name of the column in the local database.</param>
      <param name="remoteColumn">The name of the column in the remote database.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.IndexOfLocalColumn(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object when given a local column name, and returns the zero-based index of the first occurrence within the whole collection.</summary>
      <returns>The index position of <paramref name="localcolumn" /> if that string is found; otherwise -1.</returns>
      <param name="localColumn">The name of the column in the local database.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.IndexOfRemoteColumn(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object when given a remote column name, and returns the zero-based index of the first occurrence within the whole collection.</summary>
      <returns>The index position of <paramref name="remotecolumn" /> if that string is found; otherwise -1.</returns>
      <param name="remoteColumn">The name of the column in the remote database.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.InsertItem(System.Int32,Microsoft.Synchronization.Data.DbSyncColumnMapping)">
      <summary>Inserts a <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object into the collection at the specified index.</summary>
      <param name="index">The position in <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> at which to insert the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object.</param>
      <param name="item">The <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> has already been added to another <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> object or the column name is being used for another columng on the local or remote version..</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection.SetItem(System.Int32,Microsoft.Synchronization.Data.DbSyncColumnMapping)">
      <summary>Replaces the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object at the specified index.</summary>
      <param name="index">The position in <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> at which to replace the <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object.</param>
      <param name="item">The <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMapping" /> object to replace the existing object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> has already been added to another <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnMappingCollection" /> object or the column name is being used for another columng on the local or remote version..</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncConflict">
      <summary>Represents a synchronization conflict at the row level.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncConflict.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncConflict" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncConflict.#ctor(Microsoft.Synchronization.Data.DbConflictType,Microsoft.Synchronization.Data.DbSyncStage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncConflict" /> class by using conflict type and conflict stage parameters.</summary>
      <param name="type">A <see cref="T:Microsoft.Synchronization.Data.DbConflictType" /> enumeration value that represents the type of synchronization conflict.</param>
      <param name="stage">A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncConflict.ErrorMessage">
      <summary>Gets or sets the error message that is returned when <see cref="T:Microsoft.Synchronization.Data.DbConflictType" /> is set to <see cref="F:Microsoft.Synchronization.Data.DbConflictType.ErrorsOccurred" />.</summary>
      <returns>An error message.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncConflict.LocalChange">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the local database.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the local database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncConflict.RemoteChange">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the remote database.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the remote database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncConflict.Stage">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncConflict.Type">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.DbConflictType" /> enumeration value that represents the type of synchronization conflict.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbConflictType" /> enumeration value that represents the type of synchronization conflict.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncContext">
      <summary>Encapsulates data changes and metadata for a synchronization session.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncContext" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.BatchFileName">
      <summary>Gets or sets the name of the file to which spooled changes are written.</summary>
      <returns>The name of the file to which spooled changes are written. Returns null if <see cref="P:Microsoft.Synchronization.Data.DbSyncContext.IsDataBatched" /> is false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.DataSet">
      <summary>Gets or sets a <see cref="T:System.Data.DataSet" /> object that contains the selected rows from the peer database.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the selected rows from the peer database. Returns null if <see cref="P:Microsoft.Synchronization.Data.DbSyncContext.IsDataBatched" /> is true.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.IsDataBatched">
      <summary>Gets or sets whether data is sent in multiple batches or in a single <see cref="T:System.Data.DataSet" /> object.</summary>
      <returns>true if data is sent in multiple batches; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.IsLastBatch">
      <summary>Gets or sets whether the current batch is the last batch of changes.</summary>
      <returns>true if the current batch is the last batch of changes; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.IsPeerOutdated">
      <summary>Gets or sets whether a peer is outdated, which means that the peer does not have sufficient metadata to correctly synchronize.</summary>
      <returns>true if the peer is outdated; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.MadeWithForgottenKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the forgotten knowledge that the peer had when the set of changes was selected from the peer database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the forgotten knowledge that the peer had when the set of changes was selected from the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.MadeWithKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge that the peer had when the set of changes was selected from the peer database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge that the peer had when the set of changes was selected from the peer database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncContext.ScopeProgress">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncCreationOption">
      <summary>Represents the actions that Sync Framework can take when creating synchronization-related objects during database provisioning.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncCreationOption.Create">
      <summary>Creates the object.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncCreationOption.Skip">
      <summary>Do not create the object.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncCreationOption.CreateOrUseExisting">
      <summary>Creates the object if it does not exist; otherwise, uses the existing object.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncException">
      <summary>The base class for exceptions that are thrown during peer database synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncException.DbSyncStage">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the stage of synchronization during which the error occurred.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the stage of synchronization during which the error occurred.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncException.HelpLink">
      <summary>Gets or sets the URL of a help page with information about the exception.</summary>
      <returns>A URL of a help page.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncException.SyncSource">
      <summary>Gets or sets the name of the component that threw the exception.</summary>
      <returns>The name of the component that threw the exception.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint">
      <summary>Represents a foreign key relationship between two tables that are involved in synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> class for a constraint with the specified name.</summary>
      <param name="name">The name of the foreign key constraint.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String})">
      <param name="name">The name of the foreign key constraint.</param>
      <param name="parentTable">The name of the parent table that is involved in the foreign key constraint.</param>
      <param name="childTable">The name of the child table that is involved in the foreign key constraint.</param>
      <param name="parentColumns">A collection of columns from the parent table that is involved in the foreign key constraint.</param>
      <param name="childColumns">A collection of columns from the child table that is involved in the foreign key constraint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentColumns" /> or <paramref name="childColumns" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> class.</summary>
      <param name="name">The name of the foreign key constraint.</param>
      <param name="parentTable">The name of the parent table that is involved in the foreign key constraint.</param>
      <param name="childTable">The name of the child table that is involved in the foreign key constraint.</param>
      <param name="parentColumn">The column from the parent table that is involved in the foreign key constraint.</param>
      <param name="childColumn">The column from the child table that is involved in the foreign key constraint.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ChildColumns">
      <summary>Gets or sets the list of columns from the child table that is involved in the foreign key constraint.</summary>
      <returns>The list of columns from the child table that is involved in the foreign key constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ChildTableName">
      <summary>Gets or sets the name of the child table that is involved in the foreign key constraint.</summary>
      <returns>The name of the child table that is involved in the foreign key constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ConstraintName">
      <summary>Gets or sets the name of the foreign key constraint.</summary>
      <returns>The name of the foreign key constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.DeleteRule">
      <summary>Gets or sets a <see cref="T:System.Data.Rule" /> enumeration value that determines the action that occurs when a row is deleted from a parent table.</summary>
      <returns>A <see cref="T:System.Data.Rule" /> enumeration value.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ParentColumns">
      <summary>Gets or sets the list of columns from the parent table that is involved in the foreign key constraint.</summary>
      <returns>The list of columns from the parent table that is involved in the foreign key constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ParentTableName">
      <summary>Gets or sets the name of the parent table that is involved in the foreign key constraint.</summary>
      <returns>The name of the parent table that is involved in the foreign key constraint.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint.UpdateRule">
      <summary>Gets or sets a <see cref="T:System.Data.Rule" /> enumeration value that determines the action that occurs when a row is updated in the parent table.</summary>
      <returns>A <see cref="T:System.Data.Rule" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraintCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraintCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraintCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraintCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> object with the specified name from the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> object.</returns>
      <param name="constraintName">The name of the constraint to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="constraintName" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="constraintName" /> is empty.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncProgressEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncProgress" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncProgressEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncTableProgress,Microsoft.Synchronization.Data.DbSyncScopeMetadata,Microsoft.Synchronization.Data.DbSyncScopeProgress,Microsoft.Synchronization.Data.DbSyncStage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncProgressEventArgs" /> class by using table progress, scope metadata, scope progress, and synchronization stage parameters.</summary>
      <param name="tableProgress">A <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object that contains synchronization progress statistics for a table.</param>
      <param name="scopeMetadata">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that contains metadata about the synchronization scope.</param>
      <param name="scopeProgress">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</param>
      <param name="stage">A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tableProgres" />, <paramref name="scopeMetatdata" />, <paramref name="scopeProgress" />, or <paramref name="stage" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProgressEventArgs.ScopeMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that represents the metadata for a synchronization scope, such as the synchronization knowledge for the scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetaData" /> object that represents the metadata for a synchronization scope.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProgressEventArgs.ScopeProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProgressEventArgs.Stage">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProgressEventArgs.TableProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object that contains synchronization progress statistics for a table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object that contains synchronization progress statistics for a table.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncProvider">
      <summary>Encapsulates a peer synchronization provider that communicates with a peer database and shields the synchronization agent from the specific implementation of the database.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ApplicationTransactionSize">
      <summary>Gets or sets the maximum transaction size used during change application, in kilobytes.</summary>
      <returns>The maximum transaction size used during change application, in kilobytes. The default value is 0, which indicates no limit on the transaction size.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ChangeTracking">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ChangeTrackingModel" /> enumeration value that specifies the type of change tracking that is used in all peer databases.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ChangeTrackingModel" /> enumeration value that specifies the type of change tracking.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncProvider.CleanupMetadata">
      <summary>Removes change tracking metadata from the database and updates the cleanup knowledge to reflect the point where the cleanup process stopped. This enables outdated nodes to be identified.</summary>
      <returns>true if metadata cleanup ran successfully; otherwise false.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncProvider.EndSession(Microsoft.Synchronization.SyncSessionContext)">
      <summary>Called by the <see cref="T:Microsoft.Synchronization.SyncOrchestrator" /> object to indicate that a synchronization session has ended.</summary>
      <param name="syncSessionContext">Information about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncProvider.GetScopeDescription">
      <summary>Returns a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> object that contains the schema for the tables that are in the <see cref="P:Microsoft.Synchronization.Data.DbSyncProvider.SyncAdapters" /> collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> object that contains the schema for the tables that are in the <see cref="P:Microsoft.Synchronization.Data.DbSyncProvider.SyncAdapters" /> collection.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeCleanupTimestampColName">
      <summary>Gets or sets the name the column in the scope information table that contains the timestamp value when the most recent tombstone cleanup was performed for this scope.</summary>
      <returns>The name of the column, with a default of scope_cleanup_timestamp.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeForgottenKnowledgeColName">
      <summary>Gets or sets the name the column in the scope information table that contains a binary representation of the forgotten knowledge for each scope.</summary>
      <returns>The name of the column, with a default of scope_tombstone_cleanup_knowledge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeIdColName">
      <summary>Gets or sets the name the column in the scope information table that contains an identifier for the scope, typically a GUID.</summary>
      <returns>The name of the column, with a default of scope_id.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeKnowledgeColName">
      <summary>Gets or sets the name the column in the scope information table that contains a binary representation of the synchronization knowledge for each scope.</summary>
      <returns>The name of the column, with a default of scope_sync_knowledge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeLocalIdColName">
      <summary>Gets or sets the name the column in the scope information table that contains an integer identifier for the scope.</summary>
      <returns>The name of the column, with a default of scope_local_id.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeNameColName">
      <summary>Gets or sets the name the column in the scope information table that contains the name of the scope.</summary>
      <returns>The name of the column, with a default of scope_name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.ScopeTimestampColName">
      <summary>Gets or sets the name the column in the scope information table that contains the timestamp value when the metadata row was last updated.</summary>
      <returns>The name of the column, with a default of scope_timestamp.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.SelectNewTimestampCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that returns a new timestamp value from the peer database. The timestamp defines the upper bound for the set of changes to be synchronized during the current session.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.SelectOverlappingScopesCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that returns the scope name and table name for all tables in the specified scope that are also included in other scopes.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.SelectScopeInfoCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that returns scope metadata from the peer database.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.SelectTableMaxTimestampsCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that selects the maximum timestamp from each base table or tracking table, to determine whether for each table the destination already has all of the changes from the source.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.SyncAdapters">
      <summary>Gets the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" /> that is associated with the <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapterCollection" /> that is associated with the <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.UpdateScopeCleanupTimestampCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that updates the scope_cleanup_timestamp column for a particular scope in the scope_info table, to mark the point up to which cleanup has been performed for the scope.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncProvider.UpdateScopeInfoCommand">
      <summary>Gets or sets an <see cref="T:System.Data.IDbCommand" /> object that contains the query or stored procedure that updates scope metadata in the peer database.</summary>
      <returns>An <see cref="T:System.Data.IDbCommand" /> object that contains a query or stored procedure.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncScope">
      <summary>Represents a logical grouping of objects to be synchronized.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScope.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> class by using a scope name parameter.</summary>
      <param name="name">The name of the synchronization scope.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScope.ForgottenKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the forgotten knowledge associated with the scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the forgotten knowledge associated with the scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScope.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object.</summary>
      <returns>The name of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScope.SyncKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the knowledge associated with the scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the knowledge associated with the scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScope.Tables">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> objects that correspond to the <see cref="T:Microsoft.Synchronization.Data.DbSyncAdapter" /> objects associated with the <see cref="T:Microsoft.Synchronization.Data.DbSyncProvider" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> objects.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScope.Timestamp">
      <summary>Gets or sets the timestamp that is associated with cleanup of knowledge.</summary>
      <returns>A timestamp that is associated with cleanup of knowledge.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScope.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncScopeDescription">
      <summary>Represents a synchronization scope, which is a logical grouping of tables (optionally filtered) that are synchronized as a unit.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> class for the specified scope name.</summary>
      <param name="scopeName">The name of the scope.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeDescription.ScopeName">
      <summary>Gets or sets the name of the scope.</summary>
      <returns>The name of the scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeDescription.Tables">
      <summary>Gets or sets a list of <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> objects that represents the tables in the scope.</summary>
      <returns>A list of <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> objects that represents the tables in the scope.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeDescription.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeDescription.UserComment">
      <summary>Gets or sets the user comment about the scope.</summary>
      <returns>The user comment about the scope</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata">
      <summary>Represents the metadata for a <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object, such as the knowledge that is associated with a particular scope.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeMetadata.#ctor(Microsoft.Synchronization.Data.DbSyncScopeMetadata)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> class by using a scope object parameter.</summary>
      <param name="other">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeMetadata" /> object that contains metadata for another <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeMetadata.BatchCount">
      <summary>Gets or sets the number of batches that are required to synchronize a scope if batching is being used.</summary>
      <returns>The number of batches that are required to synchronize a scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeMetadata.ForgottenKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the forgotten knowledge associated with the scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the forgotten knowledge associated with the scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeMetadata.SyncKnowledge">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the knowledge associated with the scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that represents the knowledge associated with the scope.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncScopeProgress">
      <summary>Represents a set of synchronization progress statistics for the objects in a <see cref="T:Microsoft.Synchronization.Data.DbSyncScope" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeProgress.#ctor(System.Data.DataSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> class by using a data set parameter.</summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.Changes">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncScopeProgress.FindTableProgress(System.String)">
      <summary>Returns a <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object that contains synchronization progress statistics for a table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object that contains synchronization progress statistics for a table.</returns>
      <param name="tableName">The name of the table for which to get a <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tableName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TablesProgress">
      <summary>Gets a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> objects.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> objects.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalChanges">
      <summary>Gets the total number of changes that are to be applied during the synchronization session.</summary>
      <returns>The number of changes that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalChangesApplied">
      <summary>Gets the total number of changes that have been applied during the synchronization session.</summary>
      <returns>The number of changes that have been applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalChangesFailed">
      <summary>Gets the total number of changes that have failed to be applied during the synchronization session.</summary>
      <returns>The number of changes that have failed to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalChangesPending">
      <summary>Gets the total number of changes that are pending for the synchronization session.</summary>
      <returns>The number of changes that are pending.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalDeletes">
      <summary>Gets the total number of deletes that are to be applied during the synchronization session.</summary>
      <returns>The number of deletes that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalInserts">
      <summary>Gets the total number of inserts that are to be applied during the synchronization session.</summary>
      <returns>The number of inserts that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncScopeProgress.TotalUpdates">
      <summary>Gets the total number of updates that are to be applied during the synchronization session.</summary>
      <returns>The number of updates that are to be applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncSession">
      <summary>Represents a synchronization session. The <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object exists for the duration of the synchronization session.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSession.SessionId">
      <summary>Gets the GUID that Sync Framework uses to identify the synchronization session.</summary>
      <returns>A GUID that identifies the synchronization session.</returns>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncCheckConcurrency">
      <summary>Returns the string sync_check_concurrency. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncCreatePeerKey">
      <summary>Returns the string sync_create_peer_key. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncCreatePeerTimestamp">
      <summary>Returns the string sync_create_peer_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncForceWrite">
      <summary>Returns the string sync_force_write. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncInitialize">
      <summary>Returns the string sync_initialize. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncMetadataOnly">
      <summary>Returns the string sync_metadata_only. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncMinTimestamp">
      <summary>Returns the string sync_min_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncNewTimestamp">
      <summary>Returns the string sync_new_timestamp. This field is constant.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSession.SyncParameters">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects. These objects are available at the peer as session variables.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects.</returns>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncRowCount">
      <summary>Returns the string sync_row_count. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncRowCreateTimestamp">
      <summary>Returns the string sync_row_create_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncRowIsTombstone">
      <summary>Returns the string sync_row_is_tombstone. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncRowTimestamp">
      <summary>Returns the string sync_row_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeCleanupKnowledge">
      <summary>Returns the string sync_scope_cleanup_knowledge. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeCleanupTimestamp">
      <summary>Returns the string sync_scope_cleanup_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeId">
      <summary>Returns the string sync_scope_id. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeKnowledge">
      <summary>Returns the string sync_scope_knowledge. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeLocalId">
      <summary>Returns the string sync_scope_local_id. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeName">
      <summary>Returns the string sync_scope_name. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeRestoreCount">
      <summary>Returns the string sync_scope_restore_count. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncScopeTimestamp">
      <summary>Returns the string sync_scope_timestamp. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncSessionId">
      <summary>Returns the string sync_session_id. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncSharedScopeName">
      <summary>Returns the string sync_shared_scope_name. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncStageName">
      <summary>Returns the string sync_stage_name. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncTableName">
      <summary>Returns the string sync_table_name. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncUpdatePeerKey">
      <summary>Returns the string sync_update_peer_key. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncSession.SyncUpdatePeerTimestamp">
      <summary>Returns the string sync_update_peer_timestamp. This field is constant.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.SyncAgent.SessionProgress" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.#ctor(Microsoft.Synchronization.Data.DbSyncSession,Microsoft.Synchronization.Data.DbSyncStage,System.Int32,Microsoft.Synchronization.Data.DbSyncScopeProgress,System.Int32,System.Int32,Microsoft.Synchronization.SyncProviderPosition,Microsoft.Synchronization.SessionProgressStage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs" /> class by using synchronization session, synchronization stage, percent completed, scope progress, batch number, batch count, provider position, and progress stage parameters.</summary>
      <param name="session">A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="stage">A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</param>
      <param name="percentCompleted">The percentage of changes that have been completed for the current synchronization session.</param>
      <param name="scopeProgress">A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</param>
      <param name="batchNumber">The number of the batch that is currently being processed.</param>
      <param name="batchCount">The total number of batches to be processed in this synchronization session.</param>
      <param name="syncProviderPosition">A <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</param>
      <param name="sessionProgressStage">A <see cref="T:Microsoft.Synchronization.SessionProgressStage" /> enumeration value that represents the current stage of synchronization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.BatchCount">
      <summary>Gets the total number of batches to be processed in this synchronization session.</summary>
      <returns>The total number of batches to be processed in this synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.BatchNumber">
      <summary>Gets the number of the batch that is currently being processed.</summary>
      <returns>The number of the batch that is currently being processed.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.DbSyncStage">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncStage" /> enumeration value that represents the current stage of synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.GroupProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeProgress" /> object that contains a set of progress statistics for a synchronization scope.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncSessionProgressEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session, such as the ID of the peer that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncSession" /> object that contains metadata about the current synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncStage">
      <summary>Defines the different phases of synchronization from the perspective of the local peer.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ReadingMetadata">
      <summary>Reading local table metadata.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.WritingMetadata">
      <summary>Updating local metadata.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ApplyingInserts">
      <summary>Applying inserts to the store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ApplyingUpdates">
      <summary>Applying updates to the store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ApplyingDeletes">
      <summary>Applying deletes to the store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ApplyingChanges">
      <summary>Applying changes to the store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.SelectingChanges">
      <summary>Enumerating changes from the store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.CleanupMetadata">
      <summary>Cleanup metadata from tracking tables.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.DbSyncStage.ReadingSchema">
      <summary>Reading the table schema from the store.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncTableDescription">
      <summary>Represents the schema of a table that is included in the <see cref="P:Microsoft.Synchronization.Data.DbSyncScopeDescription.Tables" /> list of a <see cref="T:Microsoft.Synchronization.Data.DbSyncScopeDescription" /> object. This is used during database provisioning.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> class for the specified table name.</summary>
      <param name="tableName">The name of the database table, including the schema name if necessary.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.Columns">
      <summary>Gets a list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent the columns in a table.</summary>
      <returns>A list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent the columns in a table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.Constraints">
      <summary>Gets a list of <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> objects that represent the foreign key constraints that apply to a table.</summary>
      <returns>A list of <see cref="T:Microsoft.Synchronization.Data.DbSyncForeignKeyConstraint" /> objects that represent the foreign key constraints that apply to a table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.GlobalName">
      <summary>Gets or sets the name, including database-specific delimiters, that other nodes in a synchronization topology use to identify a table.</summary>
      <returns>The name that other nodes in a synchronization topology use to identify a table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.IsTableMapped">
      <summary>Gets whether <see cref="P:Microsoft.Synchronization.Data.DbSyncTableDescription.GlobalName" /> and <see cref="P:Microsoft.Synchronization.Data.DbSyncTableDescription.LocalName" /> are the same.</summary>
      <returns>true if <see cref="P:Microsoft.Synchronization.Data.DbSyncTableDescription.GlobalName" /> and <see cref="P:Microsoft.Synchronization.Data.DbSyncTableDescription.LocalName" /> are the same; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.LocalName">
      <summary>Gets or sets the name, including database-specific delimiters, that the local node in a synchronization topology uses to identify a table.</summary>
      <returns>The name that the local node in a synchronization topology uses to identify a table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.NonPkColumns">
      <summary>Gets a list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent all columns in a table other than the primary key columns.</summary>
      <returns>A list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent all columns in a table other than the primary key columns.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.PkColumns">
      <summary>Gets a list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent all primary key columns in a table.</summary>
      <returns>A list of <see cref="T:Microsoft.Synchronization.Data.DbSyncColumnDescription" /> objects that represent all primary key columns in a table.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableDescription.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.UnquotedGlobalName">
      <summary>Gets or sets the name, not including database-specific delimiters, that other nodes in a synchronization topology use to identify a table.</summary>
      <returns>The name that other nodes in a synchronization topology use to identify a table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescription.UnquotedLocalName">
      <summary>Gets or sets the name, not including database-specific delimiters, that the local node in a synchronization topology uses to identify a table.</summary>
      <returns>The name that the local node in a synchronization topology uses to identify a table.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncTableDescriptionCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescriptionCollection" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableDescriptionCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> object with the specified name from the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.DbSyncTableDescription" /> object.</returns>
      <param name="globalTableName">The name of the table to add to the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="globalTableName" /> is empty.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalTableName" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbSyncTableProgress">
      <summary>Represents a set of synchronization progress statistics for a table that is involved in peer synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbSyncTableProgress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbSyncTableProgress" /> class by using a table name parameter.</summary>
      <param name="tableName">The name of the table.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.BatchedDeletesRetried">
      <summary>Gets or sets the number of delete operations that were retried during a synchronization session in which changes were batched.</summary>
      <returns>The number of delete operations that were retried during a synchronization session in which changes were batched.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.ChangesApplied">
      <summary>Gets or sets the number of changes applied to a table during the synchronization session.</summary>
      <returns>The number of changes applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.ChangesFailed">
      <summary>Gets or sets the number of changes that failed to be applied to a table during the synchronization session.</summary>
      <returns>The number of changes that failed to be applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.ChangesPending">
      <summary>Gets the number of pending changes to be applied to a table during the synchronization session.</summary>
      <returns>The number of pending changes to be applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.DataTable">
      <summary>Gets or sets the <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.Deletes">
      <summary>Gets or sets the number of deletes that are applied to a table during the synchronization session.</summary>
      <returns>The number of deletes that are applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.Inserts">
      <summary>Gets or sets the number of inserts that are applied to a table during the synchronization session.</summary>
      <returns>The number of inserts that are applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.RowIndex">
      <summary>Gets or sets the index of the <see cref="T:System.Data.DataRow" /> object that is currently being processed in the <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</summary>
      <returns>The index of the <see cref="T:System.Data.DataRow" /> object that is currently being processed.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.TableName">
      <summary>Gets or sets the name of the table that is being synchronized.</summary>
      <returns>The name of the table that is being synchronized.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.TotalChanges">
      <summary>Gets the total number of changes that are applied to a table during the synchronization session.</summary>
      <returns>The total number of changes that are applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.DbSyncTableProgress.Updates">
      <summary>Gets or sets the number of updates that are applied to a table during the synchronization session.</summary>
      <returns>The number of updates that are applied to a table during the synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.DbVersionException">
      <summary>The exception that is thrown when the version of the synchronization metadata is not compatible with the version of Sync Framework.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbVersionException.#ctor">
      <summary>Initializes a new instance of the <see cref="" /><see cref="T:Microsoft.Synchronization.Data.DbVersionException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbVersionException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">Contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbVersionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbVersionException" /> class with the specified message.</summary>
      <param name="message">The message of the exception.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbVersionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.DbVersionException" /> class with the specified message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The message of the exception.</param>
      <param name="inner">The exception instance that caused the current exception, or null when no inner exception is specified.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.DbVersionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The serialized object data about the exception being thrown.</param>
      <param name="context">Contextual information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.MetadataException">
      <summary>The exception that is thrown for errors that occur while creating, reading, or writing table metadata.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.MetadataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.MetadataException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.MetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.MetadataException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.MetadataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.MetadataException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.MetadataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.MetadataException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.MetadataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination for this serialization. For more information, see <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.MetadataException.TableName">
      <summary>Gets or sets the name of the table for which the error occurred.</summary>
      <returns>The name of the table for which the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.RelationalSyncProvider">
      <summary>Abstracts a generic synchronization provider that communicates with a database and shields the synchronization agent from the specific implementation of the database.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> class.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyChangeFailed">
      <summary>Occurs during uploading, after failing to apply a row at a node.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyingChanges">
      <summary>Occurs during uploading, after connecting to the database but before applying changes.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyMetadataFailed">
      <summary>Occurs during uploading, after failing to apply metadata for a row.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchApplied">
      <summary>Occurs after each batch of changes has been applied to the destination.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchingDirectory">
      <summary>Gets or sets the directory in which batch files are spooled to disk.</summary>
      <returns>The directory in which batch files are spooled to disk.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:Microsoft.Synchronization.Data.DbSyncException">A synchronization is already in progress.</exception>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.BatchSpooled">
      <summary>Occurs after each batch of changes has been written to disk.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.BeginSession(Microsoft.Synchronization.SyncProviderPosition,Microsoft.Synchronization.SyncSessionContext)">
      <summary>Called by the <see cref="T:Microsoft.Synchronization.SyncOrchestrator" /> to indicate that a synchronization session has started.</summary>
      <param name="position">A <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</param>
      <param name="syncSessionContext">A <see cref="T:Microsoft.Synchronization.SyncSessionContext" /> object that contains information about the current synchronization session.</param>
      <exception cref="T:Microsoft.Synchronization.Data.DbSyncException">A synchronization is already in progress.</exception>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesApplied">
      <summary>Occurs during uploading, after applying changes but before disconnecting from the database.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesSelected">
      <summary>Occurs during downloading, after enumerating changes but before disconnecting from the database.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.CleanupBatchingDirectory">
      <summary>Gets or sets whether to clean up batching files after the changes in the files have been applied to the destination.</summary>
      <returns>true if batching files are cleaned up after the changes in the files have been applied to the destination (the default); otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.Configuration">
      <summary>Not implemented by <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" />. An exception of type <see cref="T:System.NotSupportedException" /> is thrown if you attempt to access this property.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.Connection">
      <summary>Gets or sets an <see cref="T:System.Data.IDbConnection" /> object that is used to connect to the database.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that is used to connect to the database.</returns>
      <exception cref="T:Microsoft.Synchronization.Data.DbSyncException">
        <paramref name="value" /> is not valid.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.CreateApplicationTransaction">
      <summary>Creates a read-committed transaction over which to apply changes to the database.</summary>
      <returns>The transaction used to apply changes to the database.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.CreateEnumerationTransaction">
      <summary>Creates a read-committed transaction over which to enumerate changes from the database.</summary>
      <returns>The transaction used to enumerate changes from the database.</returns>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.DbConnectionFailure">
      <summary>Occurs when the database connection fails during change application.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.EndSession(Microsoft.Synchronization.SyncSessionContext)">
      <summary>Called by the <see cref="T:Microsoft.Synchronization.SyncOrchestrator" /> object to indicate that a synchronization session has ended.</summary>
      <param name="syncSessionContext">A <see cref="T:Microsoft.Synchronization.SyncSessionContext" /> object that contains information about the current synchronization session.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> is disposed.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.GetChangeBatch(System.UInt32,Microsoft.Synchronization.SyncKnowledge,System.Object@)">
      <summary>Gets a batch of changes to synchronize when given batch size, destination knowledge, and change data retriever parameters.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.ChangeBatch" /> object that contains the batch of changes to be synchronized.</returns>
      <param name="batchSize">The number of changes to synchronize in each change batch.</param>
      <param name="destinationKnowledge">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge a provider has about the remote store at which changes are applied.</param>
      <param name="changeDataRetriever">The object that will be used to retrieve the modified data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationKnowledge" /> is  null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> is disposed.</exception>
      <exception cref="T:Microsoft.Synchronization.Data.DbOutdatedSyncException">The peer has outdated metadata.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.GetFullEnumerationChangeBatch(System.UInt32,Microsoft.Synchronization.SyncId,Microsoft.Synchronization.SyncKnowledge,System.Object@)">
      <summary>Gets a batch of changes to synchronize when given batch size, lower bound, knowledge, and change data retriever parameters.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.ChangeBatch" /> object that contains the batch of changes to be synchronized.</returns>
      <param name="batchSize">The number of changes to synchronize in each change batch.</param>
      <param name="lowerEnumerationBound">The point at which to start enumerating the batch of changes.</param>
      <param name="knowledgeForDataRetrieval">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the knowledge a provider has about the remote store at which changes are applied.</param>
      <param name="changeDataRetriever">The object that will be used to retrieve the modified data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.GetSyncBatchParameters(System.UInt32@,Microsoft.Synchronization.SyncKnowledge@)">
      <summary>Gets the number of kilobytes of data that will be included in change batches, and the current knowledge for the synchronization scope.</summary>
      <param name="batchSize">The number of kilobytes of data to synchronize in each change batch. This value is the same as the <see cref="P:Microsoft.Synchronization.Data.RelationalSyncProvider.MemoryDataCacheSize" /> property.</param>
      <param name="knowledge">A <see cref="T:Microsoft.Synchronization.SyncKnowledge" /> object that contains the current knowledge for the synchronization scope.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> is disposed.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.IdFormats">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncIdFormatGroup" /> object that is used to identify entities in a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncIdFormatGroup" /> object that is used to identify entities in a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.MemoryDataCacheSize">
      <summary>Gets or sets the maximum amount of memory (in KB) that Sync Framework uses to cache changes before spooling those changes to disk.</summary>
      <returns>The maximum amount of memory (in KB) that Sync Framework uses to cache changes before spooling those changes to disk.</returns>
      <exception cref="T:Microsoft.Synchronization.Data.DbSyncException">A synchronization is in progress.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnApplyChangeFailed(Microsoft.Synchronization.Data.DbApplyChangeFailedEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyMetadataFailed" /> event.</summary>
      <param name="value">The event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnApplyingChanges(Microsoft.Synchronization.Data.DbApplyingChangesEventArgs,System.Data.IDbTransaction)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyingChanges" /> event.</summary>
      <param name="value">The event data.</param>
      <param name="transaction">The current database transaction.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnApplyMetadataFailed(Microsoft.Synchronization.Data.ApplyMetadataFailedEventArgs,System.Data.IDbTransaction)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ApplyMetadataFailed" /> event.</summary>
      <param name="value">The event data.</param>
      <param name="transaction">The current database transaction.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnChangesApplied(Microsoft.Synchronization.Data.DbChangesAppliedEventArgs,System.Data.IDbTransaction)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesApplied" /> event.</summary>
      <param name="value">The event data.</param>
      <param name="transaction">The current database transaction.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnChangesSelected(Microsoft.Synchronization.Data.DbChangesSelectedEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.ChangesSelected" /> event.</summary>
      <param name="value">A <see cref="T:Microsoft.Synchronization.Data.DbChangesSelectedEventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnDbConnectionFailure(Microsoft.Synchronization.Data.DbConnectionFailureEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.DbConnectionFailure" /> event.</summary>
      <param name="value">The event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnPeerOutdated(Microsoft.Synchronization.Data.DbOutdatedEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncPeerOutdated" /> event.</summary>
      <param name="value">A <see cref="T:Microsoft.Synchronization.Data.DbOutdatedEventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnSelectingChanges(Microsoft.Synchronization.Data.DbSelectingChangesEventArgs)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SelectingChanges" /> event.</summary>
      <param name="value">A <see cref="T:Microsoft.Synchronization.Data.DbSelectingChangesEventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.OnSyncProgress(Microsoft.Synchronization.Data.DbSyncProgressEventArgs,System.Data.IDbTransaction)">
      <summary>Raises the <see cref="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncProgress" /> event.</summary>
      <param name="value">The event data.</param>
      <param name="transaction">The current database transaction.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.ProcessChangeBatch(Microsoft.Synchronization.ConflictResolutionPolicy,Microsoft.Synchronization.ChangeBatch,System.Object,Microsoft.Synchronization.SyncCallbacks,Microsoft.Synchronization.SyncSessionStatistics)">
      <summary>Processes a batch of changes when given resolution policy, source changes, change data retriever, callback, and statistics parameters.</summary>
      <param name="resolutionPolicy">A <see cref="T:Microsoft.Synchronization.ConflictResolutionPolicy" /> enumeration value that defines how conflicts are resolved.</param>
      <param name="sourceChanges">A <see cref="T:Microsoft.Synchronization.ChangeBatch" /> object that contains the changes to process.</param>
      <param name="changeDataRetriever">The object that will be used to retrieve the modified data.</param>
      <param name="syncCallbacks">A <see cref="T:Microsoft.Synchronization.SyncCallbacks" /> object that represents application callbacks used to dispatch synchronization events.</param>
      <param name="sessionStatistics">A <see cref="T:Microsoft.Synchronization.SyncSessionStatistics" /> object that contains information about changes that were applied or could not be applied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceChanges" />, <paramref name="changeDataRetriever" />, <paramref name="syncCallbacks" />, or <paramref name="sessionStatistics" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> is disposed.</exception>
      <exception cref="T:Microsoft.Synchronization.Data.DbSyncException">
        <paramref name="changeDataRetriever" /> is not valid.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.RelationalSyncProvider.ProcessFullEnumerationChangeBatch(Microsoft.Synchronization.ConflictResolutionPolicy,Microsoft.Synchronization.FullEnumerationChangeBatch,System.Object,Microsoft.Synchronization.SyncCallbacks,Microsoft.Synchronization.SyncSessionStatistics)">
      <summary>Processes a batch of changes when given resolution policy, source changes, change data retriever, callback, and statistics parameters.</summary>
      <param name="resolutionPolicy">A <see cref="T:Microsoft.Synchronization.ConflictResolutionPolicy" /> enumeration value that defines how conflicts are resolved.</param>
      <param name="sourceChanges">A <see cref="T:Microsoft.Synchronization.FullEnumerationChangeBatch" /> object that contains the changes to process.</param>
      <param name="changeDataRetriever">The object that will be used to retrieve the modified data.</param>
      <param name="syncCallbacks">A <see cref="T:Microsoft.Synchronization.SyncCallbacks" /> object that represents application callbacks used to dispatch synchronization events.</param>
      <param name="sessionStatistics">A <see cref="T:Microsoft.Synchronization.SyncSessionStatistics" /> object that contains information about changes that were applied or could not be applied.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.ScopeName">
      <summary>Gets or sets the name of the scope to synchronize.</summary>
      <returns>The name of the scope, which is a set of objects to synchronize.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:Microsoft.Synchronization.Data.RelationalSyncProvider" /> is disposed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SelectingChanges">
      <summary>Occurs during downloading, after connecting to the database but before selecting changes.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncPeerOutdated">
      <summary>Occurs before enumeration of changes if the destination node is outdated.</summary>
    </member>
    <member name="E:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncProgress">
      <summary>Occurs during the selection of changes (per table) and the application of changes (per row).</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.RelationalSyncProvider.SyncProviderPosition">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncProviderPosition" /> enumeration value that represents whether a provider is associated with the local or remote database.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ResolveAction">
      <summary>Specifies the options for resolving any conflicts that occur at the client during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ResolveAction.FireEvent">
      <summary>Raise the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.ApplyChangeFailed" /> event or the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.ApplyChangeFailed" /> event.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ResolveAction.ClientWins">
      <summary>Overwrite the row at the server with the row from the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.ResolveAction.ServerWins">
      <summary>Overwrite the row at the client with the row from the server.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SchemaCreatedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.SchemaCreated" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaCreatedEventArgs.#ctor(Microsoft.Synchronization.Data.SyncTable,Microsoft.Synchronization.Data.SyncSchema,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SchemaCreatedEventArgs" /> class by using synchronization table, schema, connection, and transaction parameters.</summary>
      <param name="syncTable">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that was created.</param>
      <param name="syncSchema">A <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object. This is a <see cref="T:System.Data.DataSet" /> that contains schema information for the table that was created.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema was created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncTable" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SchemaCreatedEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which the schema was created.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SchemaCreatedEventArgs.Schema">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object for the table that was created.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object for the table that was created.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SchemaCreatedEventArgs.Table">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that was created.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object that contains settings for the table that was created.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SchemaCreatedEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema was created.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which the schema was created.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SchemaException">
      <summary>The exception that is thrown for errors that occur while creating or reading table schema.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SchemaException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SchemaException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SchemaException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SchemaException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SchemaException.TableName">
      <summary>Gets or sets the name of the table for which the error occurred.</summary>
      <returns>The name of the table for which the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SelectingChangesEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.SelectingChanges" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.SelectingChanges" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SelectingChangesEventArgs.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession,Microsoft.Synchronization.Data.SyncContext,System.Data.IDbConnection,System.Data.IDbTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SelectingChangesEventArgs" /> class by using group metadata, session, context, connection, and transaction parameters.</summary>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <param name="syncContext">A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</param>
      <param name="connection">An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</param>
      <param name="transaction">An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupMetadata" />, <paramref name="syncSession" />, or <paramref name="syncContext" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SelectingChangesEventArgs.Connection">
      <summary>Gets an <see cref="T:System.Data.IDbConnection" /> object for the connection over which changes are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbConnection" /> object that contains a connection to the client or server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SelectingChangesEventArgs.Context">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains data changes and anchor values and other metadata for a synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SelectingChangesEventArgs.GroupMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata, such as the names of the tables in the synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata for the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SelectingChangesEventArgs.Session">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables, such as the ID of the client that is synchronizing.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains synchronization session variables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SelectingChangesEventArgs.Transaction">
      <summary>Gets or sets an <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</summary>
      <returns>An <see cref="T:System.Data.IDbTransaction" /> object that contains the transaction within which changes to tables are selected.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ServerSyncProvider">
      <summary>Abstracts a generic server synchronization provider that communicates with the server data store and shields the synchronization agent from the specific implementation of that data store.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.ApplyChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, applies inserts, updates, and deletes for a synchronization group to the server database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains synchronization data and metadata.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the server database.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.GetChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, selects from the server data store the incremental inserts, updates, and deletes to be applied at the client store for every table in synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains synchronization data and metadata.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.GetSchema(System.Collections.ObjectModel.Collection{System.String},Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, retrieves the schema for one or more tables from the server database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object that contains the schema for each specified table.</returns>
      <param name="tableNames">A collection of table names for which the server provider should get a <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProvider.GetServerInfo(Microsoft.Synchronization.Data.SyncSession)">
      <summary>When overridden in a derived class, gets server synchronization information.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</returns>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.ServerSyncProviderProxy">
      <summary>Provides a wrapper for the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProviderProxy" /> class by using a service proxy parameter.</summary>
      <param name="serviceProxy">A reference to the service that communicates with the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProxy" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.ApplyChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,System.Data.DataSet,Microsoft.Synchronization.Data.SyncSession)">
      <summary>Applies inserts, updates, and deletes for a synchronization group to the server database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains synchronization data and metadata.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the rows of data to be applied to the server database.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <exception cref="T:System.MissingMemberException">The underlying service proxy does not have an ApplyChanges method.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:Microsoft.Synchronization.Data.ServerSyncProviderProxy" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.GetChanges(Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncSession)">
      <summary>Selects for a table in the server database the inserts, updates, and deletes to apply to the client database for a synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> object that contains synchronization data and metadata.</returns>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <exception cref="T:System.MissingMemberException">The underlying service proxy does not have a GetChanges method.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.GetSchema(System.Collections.ObjectModel.Collection{System.String},Microsoft.Synchronization.Data.SyncSession)">
      <summary>Gets the table schema from the server database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object that contains the schema for each specified table.</returns>
      <param name="tableNames">A collection of table names for which the server provider should get a <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object.</param>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <exception cref="T:System.MissingMemberException">The underlying service proxy does not have a GetSchema method.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.ServerSyncProviderProxy.GetServerInfo(Microsoft.Synchronization.Data.SyncSession)">
      <summary>Gets server synchronization information.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</returns>
      <param name="syncSession">A <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object that contains metadata about the current synchronization session.</param>
      <exception cref="T:System.MissingMemberException">The underlying service proxy does not have a GetServerInfo method.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SessionVariableException">
      <summary>The exception that is thrown for errors that occur while reading or writing session variables.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SessionVariableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SessionVariableException" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SessionVariableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SessionVariableException" /> class by using serialization information and streaming context parameters.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SessionVariableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SessionVariableException" /> class by using a message parameter.</summary>
      <param name="message">A description of the error.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SessionVariableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SessionVariableException" /> class by using message and inner exception parameters.</summary>
      <param name="message">A description of the error.</param>
      <param name="inner">A wrapped exception from an external component.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SessionVariableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SessionVariableException.Parameter">
      <summary>Gets or sets a <see cref="T:System.Data.Common.DbParameter" /> object for the session variable where the error occurred.</summary>
      <returns>A <see cref="T:System.Data.Common.DbParameter" /> object for the session variable where the error occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncAnchor">
      <summary>Encapsulates a synchronization anchor. An anchor provides a reference point to determine which changes to synchronize for a synchronization group.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncAnchor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncAnchor.#ctor(Microsoft.Synchronization.Data.SyncAnchor)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> class by using an existing <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object as a parameter.</summary>
      <param name="other">An existing <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncAnchor.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> class by using an anchor parameter.</summary>
      <param name="anchor">A byte array that contains the value of the anchor, such as a timestamp value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="anchor" /> is longer than 10e6 bytes.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncAnchor.Anchor">
      <summary>Gets or sets the anchor value in the form of a byte array.</summary>
      <returns>A byte array that contains the value of the anchor, such as a timestamp value.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is longer than 10e6 bytes.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncAnchor.Equals(Microsoft.Synchronization.Data.SyncAnchor)">
      <summary>Determines whether two <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> objects are equal to each other.</summary>
      <returns>true if the anchors are equal; otherwise, false.</returns>
      <param name="other">The <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object to compare to the first <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncAnchor.IsNull">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> is null.</summary>
      <returns>true if the anchor value is null; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncConfiguration">
      <summary>Maintains the collections of tables and parameters that are required to configure the client and server synchronization providers.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncConfiguration" /> class. </summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConfiguration.SyncParameters">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects, which are available at the server as session variables.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConfiguration.SyncTables">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects, which contain settings such as the direction of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncConflict">
      <summary>Represents a synchronization conflict at the row level.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncConflict.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncConflict.#ctor(Microsoft.Synchronization.Data.ConflictType,Microsoft.Synchronization.SyncStage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> class by using conflict type and conflict stage parameters.</summary>
      <param name="conflictType">A <see cref="T:Microsoft.Synchronization.Data.ConflictType" /> enumeration value that represents the type of synchronization conflict.</param>
      <param name="conflictStage">A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflict.ClientChange">
      <summary>Gets or sets the <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the client database.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the client database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflict.ConflictType">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.ConflictType" /> enumeration value that represents the type of synchronization conflict.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ConflictType" /> enumeration value that represents the type of synchronization conflict.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflict.ErrorMessage">
      <summary>Gets or sets the error message if <see cref="T:Microsoft.Synchronization.Data.ConflictType" /> is set to <see cref="F:Microsoft.Synchronization.Data.ConflictType.ErrorsOccurred" />.</summary>
      <returns>An error message.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflict.ServerChange">
      <summary>Gets or sets the <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the server database.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the conflicting rows from the server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflict.SyncStage">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the synchronization stage during which the conflict occurred.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncConflictResolver">
      <summary>Represents the actions to take when any conflicts occur during synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncConflictResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncConflictResolver" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflictResolver.ClientDeleteServerUpdateAction">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientDeleteServerUpdate" /> conflict occurs.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientDeleteServerUpdate" /> conflict occurs.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflictResolver.ClientInsertServerInsertAction">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientInsertServerInsert" /> conflict occurs.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take if a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientInsertServerInsert" /> conflict occurs.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflictResolver.ClientUpdateServerDeleteAction">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerDelete" /> conflict occurs.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerDelete" /> conflict occurs.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflictResolver.ClientUpdateServerUpdateAction">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerUpdate" /> conflict occurs.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when a <see cref="F:Microsoft.Synchronization.Data.ConflictType.ClientUpdateServerUpdate" /> conflict occurs.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncConflictResolver.StoreErrorAction">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when an error occurs in the client or server data store.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.ResolveAction" /> enumeration value that specifies the action to take when an error occurs in the client or server data store.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncContext">
      <summary>Encapsulates data changes and anchor values and other metadata for a synchronization session.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncContext" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.BatchCount">
      <summary>Gets or sets the number of batches that are required to synchronize a group of tables.</summary>
      <returns>The number of batches that are required to synchronize a group of tables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.DataSet">
      <summary>Gets or sets a <see cref="T:System.Data.DataSet" /> object that contains the rows of data selected from the server database.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the rows of data selected from the server database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.GroupProgress">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that contains a set of progress statistics for a synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that contains a set of progress statistics for a synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.MaxAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that represents the largest anchor value for a set of changes when changes synchronized in batches.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that represents the largest anchor value for a set of changes.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.NewAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that defines the upper bound for the set of changes to be synchronized during the current session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that defines the upper bound for the set of changes to be synchronized during the current session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncContext.OriginatorId">
      <summary>Gets or sets the originator ID. This allows you to map the <see cref="P:Microsoft.Synchronization.Data.SyncSession.ClientId" /> to a different value on the server.</summary>
      <returns>An originator ID.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncDirection">
      <summary>Defines the direction that data changes flow, from the perspective of the client.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncDirection.DownloadOnly">
      <summary>During the first synchronization, the client typically downloads schema and an initial data set from the server. On subsequent synchronizations, the client downloads changes from the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncDirection.UploadOnly">
      <summary>During the first synchronization, the client typically downloads schema from the server. On subsequent synchronizations, the client uploads changes to the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncDirection.Bidirectional">
      <summary>During the first synchronization, the client typically downloads schema and an initial data set from the server. On subsequent synchronizations, the client uploads changes to the server and then downloads changes from the server.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncDirection.Snapshot">
      <summary>The client downloads a set of data from the server. The data is completely refreshed during each synchronization.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncErrorNumber">
      <summary>Defines a list of errors that can occur during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.Unknown">
      <summary>An unknown error occurred during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.InvalidValue">
      <summary>The value specified for one of the arguments is not valid.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.StoreException">
      <summary>An exception was thrown by the remote data store.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.ParsingQueryFailed">
      <summary>The remote data store could not parse one of the SELECT commands that are used to retrieve data changes.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.InvalidArguments">
      <summary>One of the arguments specified is not valid.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.AddingTableMetadataFailed">
      <summary>The local database could not add metadata columns to a table that is included in synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.TableDoesNotExist">
      <summary>The table does not exist in the database, and you specified a value of <see cref="F:Microsoft.Synchronization.Data.TableCreationOption.UseExistingTableOrFail" /> for <see cref="P:Microsoft.Synchronization.Data.SyncTable.CreationOption" />.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.TableAlreadyExists">
      <summary>The table already exists in the database, and you specified a value of <see cref="F:Microsoft.Synchronization.Data.TableCreationOption.CreateNewTableOrFail" /> for <see cref="P:Microsoft.Synchronization.Data.SyncTable.CreationOption" />.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.SyncInProgress">
      <summary>A synchronization session is in progress and <see cref="M:Microsoft.Synchronization.SyncAgent.Synchronize" /> was called. Only one session can be in progress at a time for the local database. Only one session can be in progress at a time for a specified table in the remote database.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.MetadataDoesNotExist">
      <summary>One of the anchor values is missing.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.TableIsNotTracked">
      <summary>Cannot retrieve data changes from a table because the change tracking metadata does not exist for that table.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.PrimaryKeyNotFound">
      <summary>A table does not have a primary key. A primary key is required to identify rows during synchronization.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.InvalidSchemaDataSet">
      <summary>The table schema is not valid for one of the tables that should be created in the local database. If you specify a schema by using <see cref="P:Microsoft.Synchronization.Data.SyncSchema.SchemaDataSet" />, make sure that the data set contains a valid schema for all tables that should be synchronized.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.MissingTableSchema">
      <summary>The table schema is not defined for one of the tables that should be created in the local database. If you specify a schema by using <see cref="P:Microsoft.Synchronization.Data.SyncSchema.SchemaDataSet" />, make sure that the data set contains a valid schema for all tables that should be synchronized.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.MissingSelectCommand">
      <summary>One of the SELECT commands that are used to retrieve data changes has not been defined.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncErrorNumber.MissingSessionVariable">
      <summary>A required session variable is missing for one of the SELECT commands that are used to retrieve data changes. For a list of session variables, see <see cref="T:Microsoft.Synchronization.Data.SyncSession" />.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncGroup">
      <summary>Represents a group of <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects and provides a mechanism to ensure consistent application of changes for those tables.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> class by using a group name parameter.</summary>
      <param name="groupName">The name of the synchronization group.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.Equals(System.Object)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> references the current <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.GetHashCode">
      <summary>Serves as a hash function for a <see cref="T:Microsoft.Synchronization.Data.SyncGroup." /> This is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroup.GroupName">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.op_Equality(Microsoft.Synchronization.Data.SyncGroup,Microsoft.Synchronization.Data.SyncGroup)">
      <summary>Determines whether two specified <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> objects are equal.</summary>
      <returns>true if <paramref name="sg1" /> and <paramref name="sg2" /> reference the same <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object; otherwise, false.</returns>
      <param name="syncGroup1">A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</param>
      <param name="syncGroup2">A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.op_Inequality(Microsoft.Synchronization.Data.SyncGroup,Microsoft.Synchronization.Data.SyncGroup)">
      <summary>Determines whether two specified <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> objects are not equal.</summary>
      <returns>true if <paramref name="sg1" /> and <paramref name="sg2" /> do not reference the same <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object; otherwise, false.</returns>
      <param name="syncGroup1">A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</param>
      <param name="syncGroup2">A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroup.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncGroupMetadata">
      <summary>Represents the metadata for a <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object, such as the new anchor value.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupMetadata.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> class by passing an existing <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object as a parameter.</summary>
      <param name="other">An existing <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains the metadata that you want to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupMetadata.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> class by using a group name parameter.</summary>
      <param name="groupName">The name of the synchronization group.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupMetadata.BatchCount">
      <summary>Gets or sets the number of batches that are required to synchronize a group of tables.</summary>
      <returns>The number of batches that are required to synchronize a group of tables.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupMetadata.GroupName">
      <summary>Gets or sets the name of the synchronization group.</summary>
      <returns>The name of the synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupMetadata.MaxAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that represents the largest anchor value for a set of changes when changes synchronized in batches.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that represents the largest anchor value for a set of changes.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupMetadata.NewAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that defines the upper bound for the set of changes to be synchronized during the current session.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupMetadata.TablesMetadata">
      <summary>Gets the collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> objects that correspond to the tables in the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> objects.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncGroupProgress">
      <summary>Represents a set of synchronization progress statistics for the tables in a <see cref="T:Microsoft.Synchronization.Data.SyncGroup" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupProgress.#ctor(Microsoft.Synchronization.Data.SyncGroupMetadata,System.Data.DataSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> class by using group metadata and data set parameters.</summary>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupMetadata" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupProgress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> class by using a group name parameter.</summary>
      <param name="groupName">The name of the synchronization group.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.Changes">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains the changes that are to be synchronized.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncGroupProgress.FindTableProgress(System.String)">
      <summary>Returns a <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object that contains synchronization progress statistics for a table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object that contains synchronization progress statistics for a table.</returns>
      <param name="tableName">The name of the table for which to get a <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tableName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.GroupName">
      <summary>Gets or sets the name of the group of tables that are currently being synchronized.</summary>
      <returns>The name of the group of tables that are currently being synchronized.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TablesProgress">
      <summary>Gets a collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> objects.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> objects.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalChanges">
      <summary>Gets the total number of changes that are to be applied during the synchronization session.</summary>
      <returns>The number of changes that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalChangesApplied">
      <summary>Gets the total number of changes that have been applied during the synchronization session.</summary>
      <returns>The number of changes that have been applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalChangesFailed">
      <summary>Gets the total number of changes that have failed to be applied during the synchronization session.</summary>
      <returns>The number of changes that have failed to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalChangesPending">
      <summary>Gets the total number of changes that are pending for the synchronization session.</summary>
      <returns>The number of changes that are pending.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalDeletes">
      <summary>Gets the total number of deletes that are to be applied during the synchronization session.</summary>
      <returns>The number of deletes that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalInserts">
      <summary>Gets the total number of inserts that are to be applied during the synchronization session.</summary>
      <returns>The number of inserts that are to be applied.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncGroupProgress.TotalUpdates">
      <summary>Gets the total number of updates that are to be applied during the synchronization session.</summary>
      <returns>The number of updates that are to be applied.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncParameter">
      <summary>Encapsulates information sent from the client to the server.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> class by using name and value parameters.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.Equals(System.Object)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> references the current <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.GetHashCode">
      <summary>Serves as a hash function for a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" />. This is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncParameter.Name">
      <summary>Gets or sets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.op_Equality(Microsoft.Synchronization.Data.SyncParameter,Microsoft.Synchronization.Data.SyncParameter)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects are equal.</summary>
      <returns>true if <paramref name="sp1" /> and <paramref name="sp2" /> reference the same <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object; otherwise, false.</returns>
      <param name="sp1">A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</param>
      <param name="sp2">A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.op_Inequality(Microsoft.Synchronization.Data.SyncParameter,Microsoft.Synchronization.Data.SyncParameter)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects are not equal.</summary>
      <returns>true if <paramref name="sp1" /> and <paramref name="sp2" /> do not reference the same <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object; otherwise, false.</returns>
      <param name="sp1">A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</param>
      <param name="sp2">A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameter.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>The value of the parameter.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncParameterCollection">
      <summary>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> to the end of the collection when given a parameter name and value.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object for the parameter and value added.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameterCollection.Contains(System.String)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object with the specified name is in the collection.</summary>
      <returns>Returns true if the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object exists; otherwise, false.</returns>
      <param name="parameterName">The name of the parameter. Specify the name to determine if the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object is in the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameterCollection.IndexOf(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object when given a parameter name, and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The index position of <paramref name="parameterName" /> if that string is found; otherwise -1.</returns>
      <param name="parameterName">The name of the parameter. Specify the name to determine the zero-based index of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> in the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncParameterCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object from the collection when given a parameter name.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object with the specified parameter name.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object to get from the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameterName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncParameterCollection.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object from the collection when given a parameter name.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> object to be removed from the <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" />.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncProgressEventArgs">
      <summary>Provides data for the client <see cref="E:Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider.SyncProgress" /> event and the server <see cref="E:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.SyncProgress" /> event.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncProgressEventArgs.#ctor(Microsoft.Synchronization.Data.SyncTableMetadata,Microsoft.Synchronization.Data.SyncTableProgress,Microsoft.Synchronization.Data.SyncGroupMetadata,Microsoft.Synchronization.Data.SyncGroupProgress,Microsoft.Synchronization.SyncStage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncProgressEventArgs" /> class by using table metadata, table progress, group metadata, group progress, and synchronization stage parameters.</summary>
      <param name="tableMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncTableMetaData" /> object that contains metadata for a table, such as the direction of synchronization.</param>
      <param name="tableProgress">A <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object that contains synchronization progress statistics for a table.</param>
      <param name="groupMetadata">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that contains metadata about the synchronization group.</param>
      <param name="groupProgress">A <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that contains a set of progress statistics for a synchronization group.</param>
      <param name="syncStage">A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tableMetaData" />, <paramref name="tableProgress" />, <paramref name="groupMetadata" />, or <paramref name="groupProgress" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncProgressEventArgs.GroupMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that represents the metadata for a synchronization group, such as the names of the tables in the group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupMetadata" /> object that represents the metadata for a synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncProgressEventArgs.GroupProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that contains a set of progress statistics for a synchronization group.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroupProgress" /> object that contains a set of progress statistics for a synchronization group.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncProgressEventArgs.SyncStage">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.SyncStage" /> enumeration value that represents the current stage of synchronization.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncProgressEventArgs.TableMetadata">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> object that contains metadata for a table, such as the direction of synchronization.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> object that contains metadata for a table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncProgressEventArgs.TableProgress">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object that contains synchronization progress statistics for a table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> object that contains synchronization progress statistics for a table.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchema">
      <summary>Represents the schema information that is required to create tables that are involved in synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.#ctor(Microsoft.Synchronization.Data.SyncSchema)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> class by passing an existing <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object as a parameter.</summary>
      <param name="syncSchema">An existing <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object that contains the schema that you want to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncSchema" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.#ctor(System.Data.DataSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> class by using a data set parameter.</summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object that contains schema information for one or more tables.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchema.Merge(Microsoft.Synchronization.Data.SyncSchema)">
      <summary>Merges an existing <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object into the current <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object.</summary>
      <param name="syncSchema">An existing <see cref="T:Microsoft.Synchronization.Data.SyncSchema" /> object that contains the schema that you want to merge.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncSchema" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchema.SchemaDataSet">
      <summary>Gets or sets a <see cref="T:System.Data.DataSet" /> object that contains schema information for one or more tables.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> object that contains schema information.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchema.Tables">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection. This includes the tables that are contained in the <see cref="T:Microsoft.Synchronization.Data.SyncSchema" />.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaColumn">
      <summary>Represents the schema of a column in a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" />.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AllowNull">
      <summary>Gets or sets a value that indicates whether null values are allowed in this column.</summary>
      <returns>true if null values are allowed; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AutoIncrement">
      <summary>Gets or sets a value indicating whether the column automatically increments its value when new rows are inserted into the table.</summary>
      <returns>true if the column automatically increments its value; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AutoIncrementSeed">
      <summary>Gets or sets the starting value for a column that has its <see cref="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The starting value for an autoincrement column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AutoIncrementStep">
      <summary>Gets or sets the increment for a column that has its <see cref="P:Microsoft.Synchronization.Data.SyncSchemaColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The increment value for an autoincrement column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.Collation">
      <summary>Gets or sets the collation for the column. Collation is a set of rules that determines how data is compared, ordered, and presented.</summary>
      <returns>The collation for the column if it is set; otherwise, null.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.ColumnName">
      <summary>Gets or sets the name of the column.</summary>
      <returns>The name of the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.DataType">
      <summary>Gets or sets a <see cref="T:System.Type" /> object that represents the type of data stored in the column.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of data stored in the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.DefaultValue">
      <summary>Gets or sets the default value for the column when new rows are created.</summary>
      <returns>The default value for the column if it is set; otherwise, an empty string.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.MaxLength">
      <summary>Gets or sets the maximum length of a text column.</summary>
      <returns>The maximum length of the text column if it is set; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.NumericPrecision">
      <summary>Gets of sets the numeric precision for the column if the data type is <see cref="T:System.Decimal" />.</summary>
      <returns>The numeric precision for the column if the data type is <see cref="T:System.Decimal" />; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">The column data type is not <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.NumericScale">
      <summary>Gets of sets the numeric scale for the column when the data type is <see cref="T:System.Decimal" />.</summary>
      <returns>The numeric scale for the column when the data type is <see cref="T:System.Decimal" />; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">The column data type is not <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.ProviderDataType">
      <summary>Gets or sets the SQL Server data type of the column.</summary>
      <returns>The SQL Server data type of the column.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">value does not represent a valid provider data type.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.RowGuid">
      <summary>Gets or sets whether the column is a <see cref="T:System.Guid" />.</summary>
      <returns>true if the column is a <see cref="T:System.Guid" />; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumn.Unique">
      <summary>Gets or sets whether the values in each row of the column must be unique.</summary>
      <returns>true if the values in each row of the column must be unique; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaColumns">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaColumns.Add(System.String)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object with the specified column name to the end of the collection.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object that was added to the collection.</returns>
      <param name="columnName">The name of the column to add to the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaColumns.Add(System.String,System.Type)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object with the specified column name and data type to the end of the collection.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object that was added to the collection.</returns>
      <param name="columnName">The name of the column to add to the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <param name="type">The data type of the column to add to the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaColumns.CanRemove(System.String)">
      <summary>Determines whether a specific <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object can be removed from the collection.</summary>
      <returns>true if the column can be removed from the collection; otherwise, false.</returns>
      <param name="columnName">The name of the column. Specify the name to determine if it can be removed from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaColumns.Contains(System.String)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object with the specified name is in the collection.</summary>
      <returns>true if the collection contains the specified column; otherwise, false.</returns>
      <param name="columnName">The name of the column. Specify the name to determine if it can be removed from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumns.Count">
      <summary>Gets the number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumns.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object from the collection at the specified index.</summary>
      <returns>The column at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object to return from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaColumns.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object from the collection when given a column name.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object in the collection with the specified name. Returns a null value if the column does not exist.</returns>
      <param name="columnName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object to get from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaColumns.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object with the specified name from the collection.</summary>
      <param name="columnName">The name of the column to remove from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey">
      <summary>Represents a foreign key relationship between two tables that are involved in synchronization.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ChildColumns">
      <summary>Gets a collection of columns from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ChildTable" /> of the FOREIGN KEY constraint.</summary>
      <returns>A collection of columns from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ChildTable" /> of the FOREIGN KEY constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ChildTable">
      <summary>Gets the child table of the FOREIGN KEY constraint.</summary>
      <returns>The child table of the FOREIGN KEY constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ConstraintName">
      <summary>Gets or sets the name of the FOREIGN KEY constraint.</summary>
      <returns>The name of the FOREIGN KEY constraint.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.DeleteRule">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule" /> object. This object determines the action that occurs when a row is deleted from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" />.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule" /> object. This object determines the action that occurs when a row is deleted from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentColumns">
      <summary>Gets a collection of columns from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" /> of the FOREIGN KEY constraint.</summary>
      <returns>A collection of columns from the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" /> of the FOREIGN KEY constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable">
      <summary>Gets the parent table of the FOREIGN KEY constraint.</summary>
      <returns>The parent table of the FOREIGN KEY constraint.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.UpdateRule">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule" /> object. This object determines the action that occurs when a row is updated in the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" />.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule" /> object. This object determines the action that occurs when a row is updated in the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaForeignKey.ParentTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule">
      <summary>Indicates the action that occurs when a FOREIGN KEY constraint, which is defined through a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule" /> object, is enforced during a delete or update operation.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule.Cascade">
      <summary>Delete or update related rows. This is the default.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule.None">
      <summary>No action is taken on related rows.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule.SetDefault">
      <summary>Set values in related rows to the value that is contained in the <see cref="P:Microsoft.Synchronization.Data.SyncSchemaColumn.DefaultValue" /> property for each column.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSchemaForeignKeyRule.SetNull">
      <summary>Set values in related rows to <see cref="T:System.DBNull" />.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to the end of the collection, with the specified constraint name, parent table and column, and child table and column.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object that was added to the collection.</returns>
      <param name="foreignKeyName">The name of the foreign key constraint.</param>
      <param name="parentTable">The name of the parent table.</param>
      <param name="parentColumn">The name of the primary key or unique column in the parent table.</param>
      <param name="childTable">The name of the child table.</param>
      <param name="childColumn">The name of the foreign key column in the child table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentTable" />, <paramref name="parentColumn" />, <paramref name="childTable" />, or <paramref name="childColumn" /> does not belong to the current data set.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Add(System.String,System.String,System.String[],System.String,System.String[])">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to the end of the collection, with the specified constraint name, parent table and columns, and child table and columns.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object that was added to the collection.</returns>
      <param name="foreignKeyName">The name of the foreign key constraint.</param>
      <param name="parentTable">The name of the parent table.</param>
      <param name="parentColumns">An array of the primary key or unique columns in the parent table.</param>
      <param name="childTable">The name of the child table.</param>
      <param name="childColumns">An array of the foreign key columns in the child table.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentTable" /> or <paramref name="childTable" />, does not belong to the current data set,—or—<paramref name="childColumns" /> or <paramref name="parentColumns" /> contains a column which does not belong to the current data set.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Clear">
      <summary>Clears the collection of all <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Contains(System.String)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object with the specified name is in the collection.</summary>
      <returns>true if the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object exists in the collection. Otherwise, false.</returns>
      <param name="constraintName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to search for in the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="constraintName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Count">
      <summary>Gets the number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.IndexOf(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object when given a constraint name, and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The index position of <paramref name="constraintName" /> if that string is found; if it is not found, -1.</returns>
      <param name="constraintName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to search for in the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="constraintName" /> is a null or the data set has no constraints table.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object from the collection at the specified index.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to return from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object from the collection when given a foreign key constraint name.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object in the collection with the specified name; otherwise a null value if the foreign key constraint name does not exist.</returns>
      <param name="foreignKeyName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to return from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="foreignKeyName" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object with the specified name from the collection.</summary>
      <param name="foreignKeyName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object to remove from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="foreignKeyName" /> is a null or the data set has no constraints table.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaForeignKeys.Values">
      <summary>Gets a collection of the values that are contained in the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> object.</summary>
      <returns>A collection of the values that are contained in the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaTable">
      <summary>Represents the schema of a table that is involved in synchronization.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.Collation">
      <summary>Gets or sets the collation of the table. Collation is a set of rules that determines how data is compared, ordered, and presented.</summary>
      <returns>The collation for the table if it is set; otherwise, null.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.Columns">
      <summary>Gets the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumns" /> collection that represents the columns in the table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumns" /> collection that represents the columns in the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.ForeignKeys">
      <summary>Gets the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection that represents the foreign keys for the table.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKeys" /> collection that represents the foreign keys for the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.Item(System.String)">
      <summary>Gets the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object that has the specified name from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumns" /> collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumn" /> object that has the specified name.</returns>
      <param name="columnName">The name of the column to get from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaColumns" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.PrimaryKey">
      <summary>Gets or sets the primary key columns for the table.</summary>
      <returns>An array that contains the primary key columns for the table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contains a column that is not in the parent data set.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTable.TableName">
      <summary>Gets or sets the name of the table.</summary>
      <returns>The name of the table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is a null.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSchemaTables">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaTables.Add(System.String)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object with the specified table name to the end of the collection.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object that was added to the collection.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is a null.</exception>
      <exception cref="T:System.Data.DuplicateNameException">
        <paramref name="name" /> is the same as another table name in this <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> object.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaTables.CanRemove(System.String)">
      <summary>Returns whether a specific <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object can be removed from the collection.</summary>
      <returns>Returns true if the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object can be removed from the collection; otherwise, false.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object. Specify the name to determine if it can be removed from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaTables.Contains(System.String)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object with the specified name is in the collection.</summary>
      <returns>Returns true if the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaForeignKey" /> object exists in the collection; otherwise, false.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object to search for in the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTables.Count">
      <summary>Gets the number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> objects in the collection.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTables.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object from the collection at the specified index.</summary>
      <returns>The <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object to return from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSchemaTables.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object with the specified name from the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object with the specified name; otherwise a null reference if the object does not exist.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object to return from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSchemaTables.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object with the specified name from the collection.</summary>
      <param name="name">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTable" /> object to remove from the <see cref="T:Microsoft.Synchronization.Data.SyncSchemaTables" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is a null.</exception>
      <exception cref="T:System.InvalidOperationException">The parent data set did not containe a table with the name in <paramref name="name" />.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncServerInfo">
      <summary>Encapsulates information about server-side settings and metadata. This information is available through <see cref="M:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.GetServerInfo(Microsoft.Synchronization.Data.SyncSession)" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncServerInfo.#ctor(System.Collections.ObjectModel.Collection{Microsoft.Synchronization.Data.SyncTableInfo})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> class.</summary>
      <param name="tablesInfo">A collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> objects that contain the name and description of each table.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncServerInfo.Equals(System.Object)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> references the current <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncServerInfo.GetHashCode">
      <summary>Serves as a hash function for a <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" />. This is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncServerInfo.op_Equality(Microsoft.Synchronization.Data.SyncServerInfo,Microsoft.Synchronization.Data.SyncServerInfo)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> objects are equal.</summary>
      <returns>true if <paramref name="si1" /> and <paramref name="si2" /> reference the same <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object; otherwise, false.</returns>
      <param name="syncServerInfo1">A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</param>
      <param name="syncServerInfo2">A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncServerInfo.op_Inequality(Microsoft.Synchronization.Data.SyncServerInfo,Microsoft.Synchronization.Data.SyncServerInfo)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> objects are not equal.</summary>
      <returns>true if <paramref name="si1" /> and <paramref name="si2" /> reference different <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> objects; otherwise, false.</returns>
      <param name="syncServerInfo1">A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</param>
      <param name="syncServerInfo2">A <see cref="T:Microsoft.Synchronization.Data.SyncServerInfo" /> object.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncServerInfo.TablesInfo">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> objects that contain the name and description of each table.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> objects.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncSession">
      <summary>Represents a synchronization session. The <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> object exists for the duration of the synchronization session.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSession.ClientId">
      <summary>Gets or sets the GUID that Synchronization Services uses to identify the client database.</summary>
      <returns>A GUID that identifies the client database.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSession.OriginatorId">
      <summary>Gets or sets the originator ID. This enables you to map the <see cref="P:Microsoft.Synchronization.Data.SyncSession.ClientId" /> to a different value on the server.</summary>
      <returns>An originator ID.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSession.SessionId">
      <summary>Gets the GUID that Synchronization Services uses to identify the synchronization session.</summary>
      <returns>A GUID that identifies the synchronization session.</returns>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncBatchCount">
      <summary>Returns the string sync_batch_count. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncBatchSize">
      <summary>Returns the string sync_batch_size. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncClientId">
      <summary>Returns the string sync_client_id. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncClientIdBinary">
      <summary>Returns the string sync_client_id_binary. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncClientIdHash">
      <summary>Returns the string sync_client_id_hash. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncForceWrite">
      <summary>Returns the string sync_force_write. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncGroupName">
      <summary>Returns the string sync_group_name. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncInitialized">
      <summary>Returns the string sync_initialized. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncLastReceivedAnchor">
      <summary>Returns the string sync_last_received_anchor. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncMaxReceivedAnchor">
      <summary>Returns the string sync_max_received_anchor. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncNewReceivedAnchor">
      <summary>Returns the string sync_new_received_anchor. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncOriginatorId">
      <summary>Returns the string sync_originator_id. This field is constant.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncSession.SyncParameters">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects. These objects are available at the server as session variables.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncParameterCollection" /> of <see cref="T:Microsoft.Synchronization.Data.SyncParameter" /> objects.</returns>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncRowCount">
      <summary>Returns the string sync_row_count. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncSessionId">
      <summary>Returns the string sync_session_id. This field is constant.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.SyncSession.SyncTableName">
      <summary>Returns the string sync_table_name. This field is constant.</summary>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncStatistics">
      <summary>Represents a summary of a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> with regard to the total number of operations that occurred on the client and server.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncStatistics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncStatistics" /> class.</summary>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.DownloadChangesApplied">
      <summary>Gets or sets the number of changes downloaded from the server that were applied at the client.</summary>
      <returns>The number of changes downloaded from the server that were applied at the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.DownloadChangesFailed">
      <summary>Gets or sets the number of changes downloaded from the server that could not be applied at the client.</summary>
      <returns>The number of changes downloaded from the server that could not be applied at the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.SyncCompleteTime">
      <summary>Gets or sets the time when a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> ended.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the time when a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> ended.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.SyncStartTime">
      <summary>Gets or sets the time when a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> started.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the time when a <see cref="T:Microsoft.Synchronization.Data.SyncSession" /> ended.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.TotalChangesDownloaded">
      <summary>Gets or sets the total number of changes downloaded from the server. This includes the changes that could not be applied at the client.</summary>
      <returns>The total number of changes downloaded from the server.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.TotalChangesUploaded">
      <summary>Gets or sets the total number of changes uploaded from the client. This includes the changes that could not be applied at the server.</summary>
      <returns>The total number of changes uploaded from the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.UploadChangesApplied">
      <summary>Gets or sets the number of changes uploaded from the client that were applied at the server.</summary>
      <returns>The number of changes uploaded from the client that were applied at the server.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncStatistics.UploadChangesFailed">
      <summary>Gets or sets the number of changes uploaded from the client that could not be applied at the server.</summary>
      <returns>The number of changes uploaded from the client that could not be applied at the server.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTable">
      <summary>Represents the client settings for a table involved in synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> class by using a table name parameter.</summary>
      <param name="tableName">The name of the table in the client database.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTable.CreationOption">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.TableCreationOption" /> enumeration value that represents the action to take when you are creating tables in the client database.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.TableCreationOption" /> enumeration value that represents the action to take when you are creating tables in the client database.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.Equals(System.Object)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> references the current <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare to the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is a null.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.GetHashCode">
      <summary>Serves as a hash function for a <see cref="T:Microsoft.Synchronization.Data.SyncTable" />. This is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.op_Equality(Microsoft.Synchronization.Data.SyncTable,Microsoft.Synchronization.Data.SyncTable)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects are equal.</summary>
      <returns>true if <paramref name="st1" /> and <paramref name="st2" /> reference the same <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object; otherwise, false.</returns>
      <param name="st1">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
      <param name="st2">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.op_Inequality(Microsoft.Synchronization.Data.SyncTable,Microsoft.Synchronization.Data.SyncTable)">
      <summary>Determines whether the two specified <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects are not equal.</summary>
      <returns>true if <paramref name="st1" /> and <paramref name="st2" /> reference different <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects; otherwise, false.</returns>
      <param name="st1">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
      <param name="st2">A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTable.SyncDirection">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value that represents the direction of synchronization from the perspective of the client.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value that represents the direction of synchronization from the perspective of the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTable.SyncGroup">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object that represents the group that this <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> belongs to.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object that represents the group that this <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> belongs to.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or a null.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTable.TableName">
      <summary>Gets or sets the name of the table in the client database.</summary>
      <returns>The name of the table in the client database.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or there is already a table with name <paramref name="value" /> in the current group..</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTable.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTableCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Add(System.String)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified table name to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table name.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" />.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Add(System.String,Microsoft.Synchronization.Data.SyncDirection)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified table name and synchronization direction to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table name.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" />.</param>
      <param name="direction">A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value, which defines the direction of synchronization from the perspective of the client.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Add(System.String,Microsoft.Synchronization.Data.TableCreationOption)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified table name and creation option to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table name.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" />.</param>
      <param name="creationOption">A <see cref="T:Microsoft.Synchronization.Data.TableCreationOption" /> enumeration value, which defines how table schemas are created in the client database.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Add(System.String,Microsoft.Synchronization.Data.TableCreationOption,Microsoft.Synchronization.Data.SyncDirection)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified table name, creation option, and synchronization direction to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table name.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" />.</param>
      <param name="creationOption">A <see cref="T:Microsoft.Synchronization.Data.TableCreationOption" /> enumeration value, which defines how table schemas are created in the client database.</param>
      <param name="direction">A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value, which defines the direction of synchronization from the perspective of the client.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Add(System.String,Microsoft.Synchronization.Data.TableCreationOption,Microsoft.Synchronization.Data.SyncDirection,Microsoft.Synchronization.Data.SyncGroup)">
      <summary>Adds a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified table name, creation option, synchronization direction, and synchronization group to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table name.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to add to the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" />.</param>
      <param name="creationOption">A <see cref="T:Microsoft.Synchronization.Data.TableCreationOption" /> enumeration value, which defines how table schemas are created in the client database.</param>
      <param name="direction">A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value, which defines the direction of synchronization from the perspective of the client.</param>
      <param name="syncGroup">A <see cref="T:Microsoft.Synchronization.Data.SyncGroup" /> object, which is used to group changes when they are applied.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Contains(System.String)">
      <summary>Determines whether a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified name is in the collection.</summary>
      <returns>Returns true if an object of the name <paramref name="tableName" /> exists; otherwise false.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to find in the collection.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.IndexOf(System.String)">
      <summary>Searches for a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object when given a table name, and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The index position of <paramref name="tableName" /> if that string is found; otherwise -1.</returns>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to find in the collection.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.InsertItem(System.Int32,Microsoft.Synchronization.Data.SyncTable)">
      <summary>Inserts a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object into the collection at the specified index.</summary>
      <param name="index">The position in the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> at which to insert the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
      <param name="item">The <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> belongs to a different <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> object,<paramref name="item" /> is empty,another table belongs to the same group as <paramref name="item" />,—or—The group name for <paramref name="item" /> is invalid.</exception>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object with the specified name from the collection.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object for the specified table.</returns>
      <param name="tableName">The table for which to get the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is not in this <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> object.</exception>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.Remove(System.String)">
      <summary>Removes the first occurrence of a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object from the collection when given a table name.</summary>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableCollection.SetItem(System.Int32,Microsoft.Synchronization.Data.SyncTable)">
      <summary>Replaces the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object at the specified index.</summary>
      <param name="index">The position in the <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> at which to replace the <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</param>
      <param name="item">The <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object to replace the existing object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is a null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> belongs to a different <see cref="T:Microsoft.Synchronization.Data.SyncTableCollection" /> object,<paramref name="item" /> is empty,another table belongs to the same group as <paramref name="item" />,—or—The group name for <paramref name="item" /> is invalid.</exception>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTableInfo">
      <summary>Encapsulates information about table settings and metadata. This information is available through <see cref="M:Microsoft.Synchronization.Data.Server.DbServerSyncProvider.GetServerInfo(Microsoft.Synchronization.Data.SyncSession)" />.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableInfo.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableInfo" /> class by using table name and description parameters.</summary>
      <param name="tableName">The name of the table as it is set in the corresponding synchronization adapter property, <see cref="P:Microsoft.Synchronization.Data.Server.SyncAdapter.TableName" />.</param>
      <param name="description">The description of the table as it is set in the corresponding synchronization adapter property, <see cref="P:Microsoft.Synchronization.Data.Server.SyncAdapter.Description" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableInfo.Description">
      <summary>Gets or sets the description of the table.</summary>
      <returns>The description of the table.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableInfo.TableName">
      <summary>Gets or sets the name of the table at the server that corresponds to a specified <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</summary>
      <returns>The name of the table at the server that corresponds to a specified <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTableMetadata">
      <summary>Encapsulates the metadata that is associated with a <see cref="T:Microsoft.Synchronization.Data.SyncTable" />, such as the direction of synchronization.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableMetadata.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> class by using a table name parameter.</summary>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableMetadata.#ctor(System.String,Microsoft.Synchronization.Data.SyncDirection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> class by using a table name and synchronization direction parameters.</summary>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</param>
      <param name="direction">A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value that represents the direction of synchronization from the perspective of the client.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableMetadata.LastReceivedAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time when the last change was received from the server.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time when the last change was received from the server.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableMetadata.LastSentAnchor">
      <summary>Gets or sets a <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time when the last change was sent from the client.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncAnchor" /> object that contains the time when the last change was sent from the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableMetadata.SyncDirection">
      <summary>Gets or sets the <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value that represents the direction of synchronization from the perspective of the client.</summary>
      <returns>A <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> enumeration value that represents the direction of synchronization from the perspective of the client.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableMetadata.TableName">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableMetadata.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> object.</summary>
      <returns>A string that represents the <see cref="T:Microsoft.Synchronization.Data.SyncTableMetadata" /> object.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTableProgress">
      <summary>Represents a set of synchronization progress statistics for a <see cref="T:Microsoft.Synchronization.Data.SyncTable" /> object.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> class by using default values.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTableProgress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Synchronization.Data.SyncTableProgress" /> class by using a table name parameter.</summary>
      <param name="tableName">The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</param>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.ChangesApplied">
      <summary>Gets or sets the number of changes applied to a table during the synchronization session.</summary>
      <returns>The number of changes applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.ChangesFailed">
      <summary>Gets or sets the number of changes that failed to be applied to a table during the synchronization session.</summary>
      <returns>The number of changes that failed to be applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.ChangesPending">
      <summary>Gets the number of pending changes to be applied to a table during the synchronization session.</summary>
      <returns>The number of pending changes to be applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.Conflicts">
      <summary>Gets a collection of <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> objects that contain information about any conflicts that occurred for a table during the synchronization session.</summary>
      <returns>A collection of <see cref="T:Microsoft.Synchronization.Data.SyncConflict" /> objects if any conflicts occurred; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.DataTable">
      <summary>Gets or sets the <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.Deletes">
      <summary>Gets or sets the number of deletes applied to a table during the synchronization session.</summary>
      <returns>The number of deletes applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.Inserts">
      <summary>Gets or sets the number of inserts applied to a table during the synchronization session.</summary>
      <returns>The number of inserts applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.RowIndex">
      <summary>Gets or sets the index of the <see cref="T:System.Data.DataRow" /> that is currently being processed in the <see cref="T:System.Data.DataTable" /> object that contains the changes to be synchronized.</summary>
      <returns>The index of the <see cref="T:System.Data.DataRow" /> that is currently being processed.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.TableName">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.Synchronization.Data.SyncTable" />.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.TotalChanges">
      <summary>Gets the total number of changes applied to a table during the synchronization session.</summary>
      <returns>The total number of changes applied to a table during the synchronization session.</returns>
    </member>
    <member name="P:Microsoft.Synchronization.Data.SyncTableProgress.Updates">
      <summary>Gets or sets the number of updates applied to a table during the synchronization session.</summary>
      <returns>The number of updates applied to a table during the synchronization session.</returns>
    </member>
    <member name="T:Microsoft.Synchronization.Data.SyncTracer">
      <summary>Provides tracing for a synchronization session, with four levels of output: errors, warnings, informational, and verbose.</summary>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Error(System.Int32,System.String)">
      <summary>Generates an error trace when the <paramref name="indentLevel" /> and <paramref name="message" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Error(System.Int32,System.String,System.Object[])">
      <summary>Generates an error trace when the <paramref name="indentLevel" />, <paramref name="format" />, and <paramref name="args" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Error(System.String)">
      <summary>Generates an error trace when a <paramref name="message" /> parameter is specified.</summary>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Error(System.String,System.Object[])">
      <summary>Generates an error trace when the <paramref name="format" /> and <paramref name="args" /> parameters are specified.</summary>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Info(System.Int32,System.String)">
      <summary>Generates an informational trace when the <paramref name="indentLevel " />and <paramref name="message" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Info(System.Int32,System.String,System.Object[])">
      <summary>Generates an informational trace when the <paramref name="indentLevel" />, <paramref name="format" />, and <paramref name="args" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Info(System.String)">
      <summary>Generates an informational trace when a <paramref name="message" /> parameter is specified.</summary>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Info(System.String,System.Object[])">
      <summary>Generates an informational trace when the <paramref name="format" /> and <paramref name="args" /> parameters are specified.</summary>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.IsErrorEnabled">
      <summary>Returns whether an error trace will be included in the output.</summary>
      <returns>true if the error trace is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.IsInfoEnabled">
      <summary>Returns whether an informational trace will be included in the output.</summary>
      <returns>true if the informational trace is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.IsVerboseEnabled">
      <summary>Returns whether a verbose trace will be included in the output.</summary>
      <returns>true if the verbose trace is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.IsWarningEnabled">
      <summary>Returns whether a warning trace will be included in the output.</summary>
      <returns>true if the warning trace is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Verbose(System.Int32,System.String)">
      <summary>Generates a verbose trace when the <paramref name="indentLevel" /> and <paramref name="message" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Verbose(System.Int32,System.String,System.Object[])">
      <summary>Generates a verbose trace when the <paramref name="indentLevel" />, <paramref name="format" />, and <paramref name="args" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Verbose(System.String)">
      <summary>Generates a verbose trace when a <paramref name="message" /> parameter is specified.</summary>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Verbose(System.String,System.Object[])">
      <summary>Generates a verbose trace when the <paramref name="format" /> and <paramref name="args" /> parameters are specified.</summary>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Warning(System.Int32,System.String)">
      <summary>Generates a warning trace when the <paramref name="indentLevel" /> and <paramref name="message" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Warning(System.Int32,System.String,System.Object[])">
      <summary>Generates a warning trace when the <paramref name="indentLevel" />, <paramref name="format" />, and <paramref name="args" /> parameters are specified.</summary>
      <param name="indentLevel">An integer that represents the number of spaces to indent a message. A value of 1 equals three spaces.</param>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Warning(System.String)">
      <summary>Generates a warning trace when a <paramref name="message" /> parameter is specified.</summary>
      <param name="message">The message to output in the trace.</param>
    </member>
    <member name="M:Microsoft.Synchronization.Data.SyncTracer.Warning(System.String,System.Object[])">
      <summary>Generates a warning trace when the <paramref name="format" /> and <paramref name="args" /> parameters are specified.</summary>
      <param name="format">A string that contains zero or more indexed placeholders that correspond to objects in the <paramref name="args" /> list of this method.</param>
      <param name="args">An <see cref="T:System.Object" /> array that contains zero or more objects to format.</param>
    </member>
    <member name="T:Microsoft.Synchronization.Data.TableCreationOption">
      <summary>Defines the options that are available for creating a table in the client database.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.TableCreationOption.CreateNewTableOrFail">
      <summary>Create the table in the client database. If an existing table has the same name, throw an exception.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.TableCreationOption.UseExistingTableOrFail">
      <summary>Use an existing table in the client database that has the same name. If the table does not exist, throw an exception.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.TableCreationOption.TruncateExistingOrCreateNewTable">
      <summary>Create the table in the client database if the table does not exist. If an existing table has the same name, delete all rows from this table.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable">
      <summary>Create the table in the client database. If an existing table has the same name, drop the existing table first.</summary>
    </member>
    <member name="F:Microsoft.Synchronization.Data.TableCreationOption.UploadExistingOrCreateNewTable">
      <summary>Create the table in the client database if the table does not exist. If an existing table has the same name, upload all rows from this table on the first synchronization. This option is only valid with a <see cref="T:Microsoft.Synchronization.Data.SyncDirection" /> of <see cref="F:Microsoft.Synchronization.Data.SyncDirection.Bidirectional" /> or <see cref="F:Microsoft.Synchronization.Data.SyncDirection.UploadOnly" />.</summary>
    </member>
  </members>
</doc>