'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5446
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5446.
'
Namespace wrCVUpdate
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ODMCVServiceSoap", [Namespace]:="http://his.cuahsi.org/his/1.1/ws/")>  _
    Partial Public Class ODMCVService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetCensorCodeCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataTypeCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGeneralCategoryCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSampleMediumCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSampleTypeCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTopicCategoryCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetValueTypeCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVariableNameCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVerticalDatumCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpatialReferencesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpeciationCVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ODM_CVUpdate.My.MySettings.Default.CVUpdate_ODMCV
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetCensorCodeCVCompleted As GetCensorCodeCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataTypeCVCompleted As GetDataTypeCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGeneralCategoryCVCompleted As GetGeneralCategoryCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSampleMediumCVCompleted As GetSampleMediumCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSampleTypeCVCompleted As GetSampleTypeCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTopicCategoryCVCompleted As GetTopicCategoryCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetValueTypeCVCompleted As GetValueTypeCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVariableNameCVCompleted As GetVariableNameCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVerticalDatumCVCompleted As GetVerticalDatumCVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpatialReferencesCompleted As GetSpatialReferencesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitsCompleted As GetUnitsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpeciationCVCompleted As GetSpeciationCVCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetCensorCodeCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCensorCodeCV() As String
            Dim results() As Object = Me.Invoke("GetCensorCodeCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCensorCodeCVAsync()
            Me.GetCensorCodeCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCensorCodeCVAsync(ByVal userState As Object)
            If (Me.GetCensorCodeCVOperationCompleted Is Nothing) Then
                Me.GetCensorCodeCVOperationCompleted = AddressOf Me.OnGetCensorCodeCVOperationCompleted
            End If
            Me.InvokeAsync("GetCensorCodeCV", New Object(-1) {}, Me.GetCensorCodeCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCensorCodeCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCensorCodeCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCensorCodeCVCompleted(Me, New GetCensorCodeCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetDataTypeCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataTypeCV() As String
            Dim results() As Object = Me.Invoke("GetDataTypeCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataTypeCVAsync()
            Me.GetDataTypeCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataTypeCVAsync(ByVal userState As Object)
            If (Me.GetDataTypeCVOperationCompleted Is Nothing) Then
                Me.GetDataTypeCVOperationCompleted = AddressOf Me.OnGetDataTypeCVOperationCompleted
            End If
            Me.InvokeAsync("GetDataTypeCV", New Object(-1) {}, Me.GetDataTypeCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataTypeCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataTypeCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataTypeCVCompleted(Me, New GetDataTypeCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetGeneralCategoryCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGeneralCategoryCV() As String
            Dim results() As Object = Me.Invoke("GetGeneralCategoryCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGeneralCategoryCVAsync()
            Me.GetGeneralCategoryCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGeneralCategoryCVAsync(ByVal userState As Object)
            If (Me.GetGeneralCategoryCVOperationCompleted Is Nothing) Then
                Me.GetGeneralCategoryCVOperationCompleted = AddressOf Me.OnGetGeneralCategoryCVOperationCompleted
            End If
            Me.InvokeAsync("GetGeneralCategoryCV", New Object(-1) {}, Me.GetGeneralCategoryCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGeneralCategoryCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGeneralCategoryCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGeneralCategoryCVCompleted(Me, New GetGeneralCategoryCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetSampleMediumCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSampleMediumCV() As String
            Dim results() As Object = Me.Invoke("GetSampleMediumCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSampleMediumCVAsync()
            Me.GetSampleMediumCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSampleMediumCVAsync(ByVal userState As Object)
            If (Me.GetSampleMediumCVOperationCompleted Is Nothing) Then
                Me.GetSampleMediumCVOperationCompleted = AddressOf Me.OnGetSampleMediumCVOperationCompleted
            End If
            Me.InvokeAsync("GetSampleMediumCV", New Object(-1) {}, Me.GetSampleMediumCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSampleMediumCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSampleMediumCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSampleMediumCVCompleted(Me, New GetSampleMediumCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetSampleTypeCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSampleTypeCV() As String
            Dim results() As Object = Me.Invoke("GetSampleTypeCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSampleTypeCVAsync()
            Me.GetSampleTypeCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSampleTypeCVAsync(ByVal userState As Object)
            If (Me.GetSampleTypeCVOperationCompleted Is Nothing) Then
                Me.GetSampleTypeCVOperationCompleted = AddressOf Me.OnGetSampleTypeCVOperationCompleted
            End If
            Me.InvokeAsync("GetSampleTypeCV", New Object(-1) {}, Me.GetSampleTypeCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSampleTypeCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSampleTypeCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSampleTypeCVCompleted(Me, New GetSampleTypeCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetTopicCategoryCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTopicCategoryCV() As String
            Dim results() As Object = Me.Invoke("GetTopicCategoryCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTopicCategoryCVAsync()
            Me.GetTopicCategoryCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTopicCategoryCVAsync(ByVal userState As Object)
            If (Me.GetTopicCategoryCVOperationCompleted Is Nothing) Then
                Me.GetTopicCategoryCVOperationCompleted = AddressOf Me.OnGetTopicCategoryCVOperationCompleted
            End If
            Me.InvokeAsync("GetTopicCategoryCV", New Object(-1) {}, Me.GetTopicCategoryCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTopicCategoryCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTopicCategoryCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTopicCategoryCVCompleted(Me, New GetTopicCategoryCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetValueTypeCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetValueTypeCV() As String
            Dim results() As Object = Me.Invoke("GetValueTypeCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetValueTypeCVAsync()
            Me.GetValueTypeCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetValueTypeCVAsync(ByVal userState As Object)
            If (Me.GetValueTypeCVOperationCompleted Is Nothing) Then
                Me.GetValueTypeCVOperationCompleted = AddressOf Me.OnGetValueTypeCVOperationCompleted
            End If
            Me.InvokeAsync("GetValueTypeCV", New Object(-1) {}, Me.GetValueTypeCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetValueTypeCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetValueTypeCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetValueTypeCVCompleted(Me, New GetValueTypeCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetVariableNameCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVariableNameCV() As String
            Dim results() As Object = Me.Invoke("GetVariableNameCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVariableNameCVAsync()
            Me.GetVariableNameCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVariableNameCVAsync(ByVal userState As Object)
            If (Me.GetVariableNameCVOperationCompleted Is Nothing) Then
                Me.GetVariableNameCVOperationCompleted = AddressOf Me.OnGetVariableNameCVOperationCompleted
            End If
            Me.InvokeAsync("GetVariableNameCV", New Object(-1) {}, Me.GetVariableNameCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVariableNameCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVariableNameCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVariableNameCVCompleted(Me, New GetVariableNameCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetVerticalDatumCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVerticalDatumCV() As String
            Dim results() As Object = Me.Invoke("GetVerticalDatumCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVerticalDatumCVAsync()
            Me.GetVerticalDatumCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVerticalDatumCVAsync(ByVal userState As Object)
            If (Me.GetVerticalDatumCVOperationCompleted Is Nothing) Then
                Me.GetVerticalDatumCVOperationCompleted = AddressOf Me.OnGetVerticalDatumCVOperationCompleted
            End If
            Me.InvokeAsync("GetVerticalDatumCV", New Object(-1) {}, Me.GetVerticalDatumCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVerticalDatumCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVerticalDatumCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVerticalDatumCVCompleted(Me, New GetVerticalDatumCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetSpatialReferences", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpatialReferences() As String
            Dim results() As Object = Me.Invoke("GetSpatialReferences", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpatialReferencesAsync()
            Me.GetSpatialReferencesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpatialReferencesAsync(ByVal userState As Object)
            If (Me.GetSpatialReferencesOperationCompleted Is Nothing) Then
                Me.GetSpatialReferencesOperationCompleted = AddressOf Me.OnGetSpatialReferencesOperationCompleted
            End If
            Me.InvokeAsync("GetSpatialReferences", New Object(-1) {}, Me.GetSpatialReferencesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpatialReferencesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpatialReferencesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpatialReferencesCompleted(Me, New GetSpatialReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetUnits", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnits() As String
            Dim results() As Object = Me.Invoke("GetUnits", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitsAsync()
            Me.GetUnitsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitsAsync(ByVal userState As Object)
            If (Me.GetUnitsOperationCompleted Is Nothing) Then
                Me.GetUnitsOperationCompleted = AddressOf Me.OnGetUnitsOperationCompleted
            End If
            Me.InvokeAsync("GetUnits", New Object(-1) {}, Me.GetUnitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitsCompleted(Me, New GetUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://his.cuahsi.org/his/1.1/ws/GetSpeciationCV", RequestNamespace:="http://his.cuahsi.org/his/1.1/ws/", ResponseNamespace:="http://his.cuahsi.org/his/1.1/ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpeciationCV() As String
            Dim results() As Object = Me.Invoke("GetSpeciationCV", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpeciationCVAsync()
            Me.GetSpeciationCVAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpeciationCVAsync(ByVal userState As Object)
            If (Me.GetSpeciationCVOperationCompleted Is Nothing) Then
                Me.GetSpeciationCVOperationCompleted = AddressOf Me.OnGetSpeciationCVOperationCompleted
            End If
            Me.InvokeAsync("GetSpeciationCV", New Object(-1) {}, Me.GetSpeciationCVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpeciationCVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpeciationCVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpeciationCVCompleted(Me, New GetSpeciationCVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetCensorCodeCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetCensorCodeCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCensorCodeCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetDataTypeCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataTypeCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataTypeCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetGeneralCategoryCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetGeneralCategoryCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGeneralCategoryCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetSampleMediumCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetSampleMediumCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSampleMediumCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetSampleTypeCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetSampleTypeCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSampleTypeCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetTopicCategoryCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetTopicCategoryCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTopicCategoryCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetValueTypeCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetValueTypeCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetValueTypeCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetVariableNameCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetVariableNameCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVariableNameCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetVerticalDatumCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetVerticalDatumCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVerticalDatumCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetSpatialReferencesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSpatialReferencesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpatialReferencesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetUnitsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetSpeciationCVCompletedEventHandler(ByVal sender As Object, ByVal e As GetSpeciationCVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpeciationCVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
