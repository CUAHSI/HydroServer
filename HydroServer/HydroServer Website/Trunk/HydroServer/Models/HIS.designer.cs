#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hydroserver.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="USUICEWATERNode")]
	public partial class HISDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertMapServer(MapServer instance);
    partial void UpdateMapServer(MapServer instance);
    partial void DeleteMapServer(MapServer instance);
    partial void InsertMapService(MapService instance);
    partial void UpdateMapService(MapService instance);
    partial void DeleteMapService(MapService instance);
    partial void InsertODMDatabase(ODMDatabase instance);
    partial void UpdateODMDatabase(ODMDatabase instance);
    partial void DeleteODMDatabase(ODMDatabase instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    #endregion
		
		public HISDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["databaseConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HISDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HISDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HISDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HISDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<MapServer> MapServers
		{
			get
			{
				return this.GetTable<MapServer>();
			}
		}
		
		public System.Data.Linq.Table<MapService> MapServices
		{
			get
			{
				return this.GetTable<MapService>();
			}
		}
		
		public System.Data.Linq.Table<ODMDatabase> ODMDatabases
		{
			get
			{
				return this.GetTable<ODMDatabase>();
			}
		}
		
		public System.Data.Linq.Table<RegionDatabase> RegionDatabases
		{
			get
			{
				return this.GetTable<RegionDatabase>();
			}
		}
		
		public System.Data.Linq.Table<RegionMapService> RegionMapServices
		{
			get
			{
				return this.GetTable<RegionMapService>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<MapServiceMetadata> MapServiceMetadatas
		{
			get
			{
				return this.GetTable<MapServiceMetadata>();
			}
		}
		
		public System.Data.Linq.Table<ODMDatabaseMetadata> ODMDatabaseMetadatas
		{
			get
			{
				return this.GetTable<ODMDatabaseMetadata>();
			}
		}
		
		public System.Data.Linq.Table<RegionMetadata> RegionMetadatas
		{
			get
			{
				return this.GetTable<RegionMetadata>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _OrganizationName;
		
		private string _MailingAddress;
		
		private string _City;
		
		private string _Area;
		
		private string _Country;
		
		private string _PostalCode;
		
		private string _FaxNumber;
		
		private string _PhoneNumber;
		
		private string _EmailAddress;
		
		private EntitySet<MapService> _MapServices;
		
		private EntitySet<MapService> _MapServices1;
		
		private EntitySet<ODMDatabase> _ODMDatabases;
		
		private EntitySet<ODMDatabase> _ODMDatabases1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnMailingAddressChanging(string value);
    partial void OnMailingAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    #endregion
		
		public Contact()
		{
			this._MapServices = new EntitySet<MapService>(new Action<MapService>(this.attach_MapServices), new Action<MapService>(this.detach_MapServices));
			this._MapServices1 = new EntitySet<MapService>(new Action<MapService>(this.attach_MapServices1), new Action<MapService>(this.detach_MapServices1));
			this._ODMDatabases = new EntitySet<ODMDatabase>(new Action<ODMDatabase>(this.attach_ODMDatabases), new Action<ODMDatabase>(this.detach_ODMDatabases));
			this._ODMDatabases1 = new EntitySet<ODMDatabase>(new Action<ODMDatabase>(this.attach_ODMDatabases1), new Action<ODMDatabase>(this.detach_ODMDatabases1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingAddress", DbType="NVarChar(255)")]
		public string MailingAddress
		{
			get
			{
				return this._MailingAddress;
			}
			set
			{
				if ((this._MailingAddress != value))
				{
					this.OnMailingAddressChanging(value);
					this.SendPropertyChanging();
					this._MailingAddress = value;
					this.SendPropertyChanged("MailingAddress");
					this.OnMailingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(255)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(255)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_MapService", Storage="_MapServices", ThisKey="ContactID", OtherKey="MetadataContactID")]
		public EntitySet<MapService> MapServices
		{
			get
			{
				return this._MapServices;
			}
			set
			{
				this._MapServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_MapService1", Storage="_MapServices1", ThisKey="ContactID", OtherKey="DatasetContactID")]
		public EntitySet<MapService> MapServices1
		{
			get
			{
				return this._MapServices1;
			}
			set
			{
				this._MapServices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ODMDatabase", Storage="_ODMDatabases", ThisKey="ContactID", OtherKey="MetadataContactID")]
		public EntitySet<ODMDatabase> ODMDatabases
		{
			get
			{
				return this._ODMDatabases;
			}
			set
			{
				this._ODMDatabases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ODMDatabase1", Storage="_ODMDatabases1", ThisKey="ContactID", OtherKey="DatasetContactID")]
		public EntitySet<ODMDatabase> ODMDatabases1
		{
			get
			{
				return this._ODMDatabases1;
			}
			set
			{
				this._ODMDatabases1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapServices(MapService entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_MapServices(MapService entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_MapServices1(MapService entity)
		{
			this.SendPropertyChanging();
			entity.Contact1 = this;
		}
		
		private void detach_MapServices1(MapService entity)
		{
			this.SendPropertyChanging();
			entity.Contact1 = null;
		}
		
		private void attach_ODMDatabases(ODMDatabase entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ODMDatabases(ODMDatabase entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_ODMDatabases1(ODMDatabase entity)
		{
			this.SendPropertyChanging();
			entity.Contact1 = this;
		}
		
		private void detach_ODMDatabases1(ODMDatabase entity)
		{
			this.SendPropertyChanging();
			entity.Contact1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapServers")]
	public partial class MapServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MapServerID;
		
		private string _MapServerName;
		
		private string _ConnectionURL;
		
		private string _MapServerType;
		
		private string _Domain;
		
		private string _Username;
		
		private string _Password;
		
		private EntitySet<MapService> _MapServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapServerIDChanging(int value);
    partial void OnMapServerIDChanged();
    partial void OnMapServerNameChanging(string value);
    partial void OnMapServerNameChanged();
    partial void OnConnectionURLChanging(string value);
    partial void OnConnectionURLChanged();
    partial void OnMapServerTypeChanging(string value);
    partial void OnMapServerTypeChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public MapServer()
		{
			this._MapServices = new EntitySet<MapService>(new Action<MapService>(this.attach_MapServices), new Action<MapService>(this.detach_MapServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MapServerID
		{
			get
			{
				return this._MapServerID;
			}
			set
			{
				if ((this._MapServerID != value))
				{
					this.OnMapServerIDChanging(value);
					this.SendPropertyChanging();
					this._MapServerID = value;
					this.SendPropertyChanged("MapServerID");
					this.OnMapServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MapServerName
		{
			get
			{
				return this._MapServerName;
			}
			set
			{
				if ((this._MapServerName != value))
				{
					this.OnMapServerNameChanging(value);
					this.SendPropertyChanging();
					this._MapServerName = value;
					this.SendPropertyChanged("MapServerName");
					this.OnMapServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionURL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ConnectionURL
		{
			get
			{
				return this._ConnectionURL;
			}
			set
			{
				if ((this._ConnectionURL != value))
				{
					this.OnConnectionURLChanging(value);
					this.SendPropertyChanging();
					this._ConnectionURL = value;
					this.SendPropertyChanged("ConnectionURL");
					this.OnConnectionURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServerType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MapServerType
		{
			get
			{
				return this._MapServerType;
			}
			set
			{
				if ((this._MapServerType != value))
				{
					this.OnMapServerTypeChanging(value);
					this.SendPropertyChanging();
					this._MapServerType = value;
					this.SendPropertyChanged("MapServerType");
					this.OnMapServerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domain", DbType="NVarChar(255)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapServer_MapService", Storage="_MapServices", ThisKey="MapServerID", OtherKey="MapServerID")]
		public EntitySet<MapService> MapServices
		{
			get
			{
				return this._MapServices;
			}
			set
			{
				this._MapServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapServices(MapService entity)
		{
			this.SendPropertyChanging();
			entity.MapServer = this;
		}
		
		private void detach_MapServices(MapService entity)
		{
			this.SendPropertyChanging();
			entity.MapServer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapServices")]
	public partial class MapService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MapServiceID;
		
		private string _Title;
		
		private string _MapConnection;
		
		private int _MapServerID;
		
		private System.DateTime _ReferenceDate;
		
		private double _NorthExtent;
		
		private double _EastExtent;
		
		private double _SouthExtent;
		
		private double _WestExtent;
		
		private string _TopicCategory;
		
		private string _Abstract;
		
		private int _MetadataContactID;
		
		private System.Nullable<int> _DatasetContactID;
		
		private string _SpatialResolution;
		
		private string _DistributionFormat;
		
		private string _SpatialRepresentationType;
		
		private string _SpatialReferenceSystem;
		
		private string _LineageStatement;
		
		private string _OnlineResource;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Contact> _Contact1;
		
		private EntityRef<MapServer> _MapServer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapServiceIDChanging(int value);
    partial void OnMapServiceIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMapConnectionChanging(string value);
    partial void OnMapConnectionChanged();
    partial void OnMapServerIDChanging(int value);
    partial void OnMapServerIDChanged();
    partial void OnReferenceDateChanging(System.DateTime value);
    partial void OnReferenceDateChanged();
    partial void OnNorthExtentChanging(double value);
    partial void OnNorthExtentChanged();
    partial void OnEastExtentChanging(double value);
    partial void OnEastExtentChanged();
    partial void OnSouthExtentChanging(double value);
    partial void OnSouthExtentChanged();
    partial void OnWestExtentChanging(double value);
    partial void OnWestExtentChanged();
    partial void OnTopicCategoryChanging(string value);
    partial void OnTopicCategoryChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnMetadataContactIDChanging(int value);
    partial void OnMetadataContactIDChanged();
    partial void OnDatasetContactIDChanging(System.Nullable<int> value);
    partial void OnDatasetContactIDChanged();
    partial void OnSpatialResolutionChanging(string value);
    partial void OnSpatialResolutionChanged();
    partial void OnDistributionFormatChanging(string value);
    partial void OnDistributionFormatChanged();
    partial void OnSpatialRepresentationTypeChanging(string value);
    partial void OnSpatialRepresentationTypeChanged();
    partial void OnSpatialReferenceSystemChanging(string value);
    partial void OnSpatialReferenceSystemChanged();
    partial void OnLineageStatementChanging(string value);
    partial void OnLineageStatementChanged();
    partial void OnOnlineResourceChanging(string value);
    partial void OnOnlineResourceChanged();
    #endregion
		
		public MapService()
		{
			this._Contact = default(EntityRef<Contact>);
			this._Contact1 = default(EntityRef<Contact>);
			this._MapServer = default(EntityRef<MapServer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MapServiceID
		{
			get
			{
				return this._MapServiceID;
			}
			set
			{
				if ((this._MapServiceID != value))
				{
					this.OnMapServiceIDChanging(value);
					this.SendPropertyChanging();
					this._MapServiceID = value;
					this.SendPropertyChanged("MapServiceID");
					this.OnMapServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapConnection", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MapConnection
		{
			get
			{
				return this._MapConnection;
			}
			set
			{
				if ((this._MapConnection != value))
				{
					this.OnMapConnectionChanging(value);
					this.SendPropertyChanging();
					this._MapConnection = value;
					this.SendPropertyChanged("MapConnection");
					this.OnMapConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServerID", DbType="Int NOT NULL")]
		public int MapServerID
		{
			get
			{
				return this._MapServerID;
			}
			set
			{
				if ((this._MapServerID != value))
				{
					if (this._MapServer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapServerIDChanging(value);
					this.SendPropertyChanging();
					this._MapServerID = value;
					this.SendPropertyChanged("MapServerID");
					this.OnMapServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthExtent", DbType="Float NOT NULL")]
		public double NorthExtent
		{
			get
			{
				return this._NorthExtent;
			}
			set
			{
				if ((this._NorthExtent != value))
				{
					this.OnNorthExtentChanging(value);
					this.SendPropertyChanging();
					this._NorthExtent = value;
					this.SendPropertyChanged("NorthExtent");
					this.OnNorthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EastExtent", DbType="Float NOT NULL")]
		public double EastExtent
		{
			get
			{
				return this._EastExtent;
			}
			set
			{
				if ((this._EastExtent != value))
				{
					this.OnEastExtentChanging(value);
					this.SendPropertyChanging();
					this._EastExtent = value;
					this.SendPropertyChanged("EastExtent");
					this.OnEastExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SouthExtent", DbType="Float NOT NULL")]
		public double SouthExtent
		{
			get
			{
				return this._SouthExtent;
			}
			set
			{
				if ((this._SouthExtent != value))
				{
					this.OnSouthExtentChanging(value);
					this.SendPropertyChanging();
					this._SouthExtent = value;
					this.SendPropertyChanged("SouthExtent");
					this.OnSouthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WestExtent", DbType="Float NOT NULL")]
		public double WestExtent
		{
			get
			{
				return this._WestExtent;
			}
			set
			{
				if ((this._WestExtent != value))
				{
					this.OnWestExtentChanging(value);
					this.SendPropertyChanging();
					this._WestExtent = value;
					this.SendPropertyChanged("WestExtent");
					this.OnWestExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TopicCategory
		{
			get
			{
				return this._TopicCategory;
			}
			set
			{
				if ((this._TopicCategory != value))
				{
					this.OnTopicCategoryChanging(value);
					this.SendPropertyChanging();
					this._TopicCategory = value;
					this.SendPropertyChanged("TopicCategory");
					this.OnTopicCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstract", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Abstract
		{
			get
			{
				return this._Abstract;
			}
			set
			{
				if ((this._Abstract != value))
				{
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataContactID", DbType="Int NOT NULL")]
		public int MetadataContactID
		{
			get
			{
				return this._MetadataContactID;
			}
			set
			{
				if ((this._MetadataContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetadataContactIDChanging(value);
					this.SendPropertyChanging();
					this._MetadataContactID = value;
					this.SendPropertyChanged("MetadataContactID");
					this.OnMetadataContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatasetContactID", DbType="Int")]
		public System.Nullable<int> DatasetContactID
		{
			get
			{
				return this._DatasetContactID;
			}
			set
			{
				if ((this._DatasetContactID != value))
				{
					if (this._Contact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDatasetContactIDChanging(value);
					this.SendPropertyChanging();
					this._DatasetContactID = value;
					this.SendPropertyChanged("DatasetContactID");
					this.OnDatasetContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpatialResolution", DbType="NVarChar(255)")]
		public string SpatialResolution
		{
			get
			{
				return this._SpatialResolution;
			}
			set
			{
				if ((this._SpatialResolution != value))
				{
					this.OnSpatialResolutionChanging(value);
					this.SendPropertyChanging();
					this._SpatialResolution = value;
					this.SendPropertyChanged("SpatialResolution");
					this.OnSpatialResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributionFormat", DbType="NVarChar(255)")]
		public string DistributionFormat
		{
			get
			{
				return this._DistributionFormat;
			}
			set
			{
				if ((this._DistributionFormat != value))
				{
					this.OnDistributionFormatChanging(value);
					this.SendPropertyChanging();
					this._DistributionFormat = value;
					this.SendPropertyChanged("DistributionFormat");
					this.OnDistributionFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpatialRepresentationType", DbType="NVarChar(255)")]
		public string SpatialRepresentationType
		{
			get
			{
				return this._SpatialRepresentationType;
			}
			set
			{
				if ((this._SpatialRepresentationType != value))
				{
					this.OnSpatialRepresentationTypeChanging(value);
					this.SendPropertyChanging();
					this._SpatialRepresentationType = value;
					this.SendPropertyChanged("SpatialRepresentationType");
					this.OnSpatialRepresentationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpatialReferenceSystem", DbType="NVarChar(255)")]
		public string SpatialReferenceSystem
		{
			get
			{
				return this._SpatialReferenceSystem;
			}
			set
			{
				if ((this._SpatialReferenceSystem != value))
				{
					this.OnSpatialReferenceSystemChanging(value);
					this.SendPropertyChanging();
					this._SpatialReferenceSystem = value;
					this.SendPropertyChanged("SpatialReferenceSystem");
					this.OnSpatialReferenceSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineageStatement", DbType="NVarChar(MAX)")]
		public string LineageStatement
		{
			get
			{
				return this._LineageStatement;
			}
			set
			{
				if ((this._LineageStatement != value))
				{
					this.OnLineageStatementChanging(value);
					this.SendPropertyChanging();
					this._LineageStatement = value;
					this.SendPropertyChanged("LineageStatement");
					this.OnLineageStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineResource", DbType="NVarChar(500)")]
		public string OnlineResource
		{
			get
			{
				return this._OnlineResource;
			}
			set
			{
				if ((this._OnlineResource != value))
				{
					this.OnOnlineResourceChanging(value);
					this.SendPropertyChanging();
					this._OnlineResource = value;
					this.SendPropertyChanged("OnlineResource");
					this.OnOnlineResourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_MapService", Storage="_Contact", ThisKey="MetadataContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.MapServices.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.MapServices.Add(this);
						this._MetadataContactID = value.ContactID;
					}
					else
					{
						this._MetadataContactID = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_MapService1", Storage="_Contact1", ThisKey="DatasetContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact1
		{
			get
			{
				return this._Contact1.Entity;
			}
			set
			{
				Contact previousValue = this._Contact1.Entity;
				if (((previousValue != value) 
							|| (this._Contact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact1.Entity = null;
						previousValue.MapServices1.Remove(this);
					}
					this._Contact1.Entity = value;
					if ((value != null))
					{
						value.MapServices1.Add(this);
						this._DatasetContactID = value.ContactID;
					}
					else
					{
						this._DatasetContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapServer_MapService", Storage="_MapServer", ThisKey="MapServerID", OtherKey="MapServerID", IsForeignKey=true)]
		public MapServer MapServer
		{
			get
			{
				return this._MapServer.Entity;
			}
			set
			{
				MapServer previousValue = this._MapServer.Entity;
				if (((previousValue != value) 
							|| (this._MapServer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapServer.Entity = null;
						previousValue.MapServices.Remove(this);
					}
					this._MapServer.Entity = value;
					if ((value != null))
					{
						value.MapServices.Add(this);
						this._MapServerID = value.MapServerID;
					}
					else
					{
						this._MapServerID = default(int);
					}
					this.SendPropertyChanged("MapServer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ODMDatabases")]
	public partial class ODMDatabase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DatabaseID;
		
		private string _Title;
		
		private string _ServerAddress;
		
		private string _DatabaseName;
		
		private string _ODMUser;
		
		private string _ODMPassword;
		
		private string _MapMarkerURL;
		
		private System.DateTime _ReferenceDate;
		
		private double _NorthExtent;
		
		private double _EastExtent;
		
		private double _SouthExtent;
		
		private double _WestExtent;
		
		private string _SpatialReferenceSystem;
		
		private string _TopicCategory;
		
		private string _Abstract;
		
		private string _Citation;
		
		private int _MetadataContactID;
		
		private System.Nullable<int> _DatasetContactID;
		
		private string _LineageStatement;
		
		private string _WaterOneFlowWSDL;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Contact> _Contact1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatabaseIDChanging(int value);
    partial void OnDatabaseIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnServerAddressChanging(string value);
    partial void OnServerAddressChanged();
    partial void OnDatabaseNameChanging(string value);
    partial void OnDatabaseNameChanged();
    partial void OnODMUserChanging(string value);
    partial void OnODMUserChanged();
    partial void OnODMPasswordChanging(string value);
    partial void OnODMPasswordChanged();
    partial void OnMapMarkerURLChanging(string value);
    partial void OnMapMarkerURLChanged();
    partial void OnReferenceDateChanging(System.DateTime value);
    partial void OnReferenceDateChanged();
    partial void OnNorthExtentChanging(double value);
    partial void OnNorthExtentChanged();
    partial void OnEastExtentChanging(double value);
    partial void OnEastExtentChanged();
    partial void OnSouthExtentChanging(double value);
    partial void OnSouthExtentChanged();
    partial void OnWestExtentChanging(double value);
    partial void OnWestExtentChanged();
    partial void OnSpatialReferenceSystemChanging(string value);
    partial void OnSpatialReferenceSystemChanged();
    partial void OnTopicCategoryChanging(string value);
    partial void OnTopicCategoryChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnCitationChanging(string value);
    partial void OnCitationChanged();
    partial void OnMetadataContactIDChanging(int value);
    partial void OnMetadataContactIDChanged();
    partial void OnDatasetContactIDChanging(System.Nullable<int> value);
    partial void OnDatasetContactIDChanged();
    partial void OnLineageStatementChanging(string value);
    partial void OnLineageStatementChanged();
    partial void OnWaterOneFlowWSDLChanging(string value);
    partial void OnWaterOneFlowWSDLChanged();
    #endregion
		
		public ODMDatabase()
		{
			this._Contact = default(EntityRef<Contact>);
			this._Contact1 = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this.OnDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseID = value;
					this.SendPropertyChanged("DatabaseID");
					this.OnDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerAddress", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ServerAddress
		{
			get
			{
				return this._ServerAddress;
			}
			set
			{
				if ((this._ServerAddress != value))
				{
					this.OnServerAddressChanging(value);
					this.SendPropertyChanging();
					this._ServerAddress = value;
					this.SendPropertyChanged("ServerAddress");
					this.OnServerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DatabaseName
		{
			get
			{
				return this._DatabaseName;
			}
			set
			{
				if ((this._DatabaseName != value))
				{
					this.OnDatabaseNameChanging(value);
					this.SendPropertyChanging();
					this._DatabaseName = value;
					this.SendPropertyChanged("DatabaseName");
					this.OnDatabaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODMUser", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ODMUser
		{
			get
			{
				return this._ODMUser;
			}
			set
			{
				if ((this._ODMUser != value))
				{
					this.OnODMUserChanging(value);
					this.SendPropertyChanging();
					this._ODMUser = value;
					this.SendPropertyChanged("ODMUser");
					this.OnODMUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODMPassword", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ODMPassword
		{
			get
			{
				return this._ODMPassword;
			}
			set
			{
				if ((this._ODMPassword != value))
				{
					this.OnODMPasswordChanging(value);
					this.SendPropertyChanging();
					this._ODMPassword = value;
					this.SendPropertyChanged("ODMPassword");
					this.OnODMPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapMarkerURL", DbType="NVarChar(500)")]
		public string MapMarkerURL
		{
			get
			{
				return this._MapMarkerURL;
			}
			set
			{
				if ((this._MapMarkerURL != value))
				{
					this.OnMapMarkerURLChanging(value);
					this.SendPropertyChanging();
					this._MapMarkerURL = value;
					this.SendPropertyChanged("MapMarkerURL");
					this.OnMapMarkerURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthExtent", DbType="Float NOT NULL")]
		public double NorthExtent
		{
			get
			{
				return this._NorthExtent;
			}
			set
			{
				if ((this._NorthExtent != value))
				{
					this.OnNorthExtentChanging(value);
					this.SendPropertyChanging();
					this._NorthExtent = value;
					this.SendPropertyChanged("NorthExtent");
					this.OnNorthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EastExtent", DbType="Float NOT NULL")]
		public double EastExtent
		{
			get
			{
				return this._EastExtent;
			}
			set
			{
				if ((this._EastExtent != value))
				{
					this.OnEastExtentChanging(value);
					this.SendPropertyChanging();
					this._EastExtent = value;
					this.SendPropertyChanged("EastExtent");
					this.OnEastExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SouthExtent", DbType="Float NOT NULL")]
		public double SouthExtent
		{
			get
			{
				return this._SouthExtent;
			}
			set
			{
				if ((this._SouthExtent != value))
				{
					this.OnSouthExtentChanging(value);
					this.SendPropertyChanging();
					this._SouthExtent = value;
					this.SendPropertyChanged("SouthExtent");
					this.OnSouthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WestExtent", DbType="Float NOT NULL")]
		public double WestExtent
		{
			get
			{
				return this._WestExtent;
			}
			set
			{
				if ((this._WestExtent != value))
				{
					this.OnWestExtentChanging(value);
					this.SendPropertyChanging();
					this._WestExtent = value;
					this.SendPropertyChanged("WestExtent");
					this.OnWestExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpatialReferenceSystem", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpatialReferenceSystem
		{
			get
			{
				return this._SpatialReferenceSystem;
			}
			set
			{
				if ((this._SpatialReferenceSystem != value))
				{
					this.OnSpatialReferenceSystemChanging(value);
					this.SendPropertyChanging();
					this._SpatialReferenceSystem = value;
					this.SendPropertyChanged("SpatialReferenceSystem");
					this.OnSpatialReferenceSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TopicCategory
		{
			get
			{
				return this._TopicCategory;
			}
			set
			{
				if ((this._TopicCategory != value))
				{
					this.OnTopicCategoryChanging(value);
					this.SendPropertyChanging();
					this._TopicCategory = value;
					this.SendPropertyChanged("TopicCategory");
					this.OnTopicCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstract", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Abstract
		{
			get
			{
				return this._Abstract;
			}
			set
			{
				if ((this._Abstract != value))
				{
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citation", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Citation
		{
			get
			{
				return this._Citation;
			}
			set
			{
				if ((this._Citation != value))
				{
					this.OnCitationChanging(value);
					this.SendPropertyChanging();
					this._Citation = value;
					this.SendPropertyChanged("Citation");
					this.OnCitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataContactID", DbType="Int NOT NULL")]
		public int MetadataContactID
		{
			get
			{
				return this._MetadataContactID;
			}
			set
			{
				if ((this._MetadataContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetadataContactIDChanging(value);
					this.SendPropertyChanging();
					this._MetadataContactID = value;
					this.SendPropertyChanged("MetadataContactID");
					this.OnMetadataContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatasetContactID", DbType="Int")]
		public System.Nullable<int> DatasetContactID
		{
			get
			{
				return this._DatasetContactID;
			}
			set
			{
				if ((this._DatasetContactID != value))
				{
					if (this._Contact1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDatasetContactIDChanging(value);
					this.SendPropertyChanging();
					this._DatasetContactID = value;
					this.SendPropertyChanged("DatasetContactID");
					this.OnDatasetContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineageStatement", DbType="NVarChar(MAX)")]
		public string LineageStatement
		{
			get
			{
				return this._LineageStatement;
			}
			set
			{
				if ((this._LineageStatement != value))
				{
					this.OnLineageStatementChanging(value);
					this.SendPropertyChanging();
					this._LineageStatement = value;
					this.SendPropertyChanged("LineageStatement");
					this.OnLineageStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterOneFlowWSDL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string WaterOneFlowWSDL
		{
			get
			{
				return this._WaterOneFlowWSDL;
			}
			set
			{
				if ((this._WaterOneFlowWSDL != value))
				{
					this.OnWaterOneFlowWSDLChanging(value);
					this.SendPropertyChanging();
					this._WaterOneFlowWSDL = value;
					this.SendPropertyChanged("WaterOneFlowWSDL");
					this.OnWaterOneFlowWSDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ODMDatabase", Storage="_Contact", ThisKey="MetadataContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ODMDatabases.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ODMDatabases.Add(this);
						this._MetadataContactID = value.ContactID;
					}
					else
					{
						this._MetadataContactID = default(int);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ODMDatabase1", Storage="_Contact1", ThisKey="DatasetContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact1
		{
			get
			{
				return this._Contact1.Entity;
			}
			set
			{
				Contact previousValue = this._Contact1.Entity;
				if (((previousValue != value) 
							|| (this._Contact1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact1.Entity = null;
						previousValue.ODMDatabases1.Remove(this);
					}
					this._Contact1.Entity = value;
					if ((value != null))
					{
						value.ODMDatabases1.Add(this);
						this._DatasetContactID = value.ContactID;
					}
					else
					{
						this._DatasetContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionDatabases")]
	public partial class RegionDatabase
	{
		
		private int _RegionID;
		
		private int _DatabaseID;
		
		public RegionDatabase()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this._RegionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int NOT NULL")]
		public int DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this._DatabaseID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionMapServices")]
	public partial class RegionMapService
	{
		
		private int _RegionID;
		
		private int _MapServiceID;
		
		public RegionMapService()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this._RegionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServiceID", DbType="Int NOT NULL")]
		public int MapServiceID
		{
			get
			{
				return this._MapServiceID;
			}
			set
			{
				if ((this._MapServiceID != value))
				{
					this._MapServiceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regions")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionID;
		
		private string _RegionName;
		
		private string _RegionTitle;
		
		private double _NorthExtent;
		
		private double _EastExtent;
		
		private double _SouthExtent;
		
		private double _WestExtent;
		
		private string _RegionDescription;
		
		private string _RegionMapCSSURL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnRegionTitleChanging(string value);
    partial void OnRegionTitleChanged();
    partial void OnNorthExtentChanging(double value);
    partial void OnNorthExtentChanged();
    partial void OnEastExtentChanging(double value);
    partial void OnEastExtentChanged();
    partial void OnSouthExtentChanging(double value);
    partial void OnSouthExtentChanged();
    partial void OnWestExtentChanging(double value);
    partial void OnWestExtentChanged();
    partial void OnRegionDescriptionChanging(string value);
    partial void OnRegionDescriptionChanged();
    partial void OnRegionMapCSSURLChanging(string value);
    partial void OnRegionMapCSSURLChanged();
    #endregion
		
		public Region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RegionTitle
		{
			get
			{
				return this._RegionTitle;
			}
			set
			{
				if ((this._RegionTitle != value))
				{
					this.OnRegionTitleChanging(value);
					this.SendPropertyChanging();
					this._RegionTitle = value;
					this.SendPropertyChanged("RegionTitle");
					this.OnRegionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthExtent", DbType="Float NOT NULL")]
		public double NorthExtent
		{
			get
			{
				return this._NorthExtent;
			}
			set
			{
				if ((this._NorthExtent != value))
				{
					this.OnNorthExtentChanging(value);
					this.SendPropertyChanging();
					this._NorthExtent = value;
					this.SendPropertyChanged("NorthExtent");
					this.OnNorthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EastExtent", DbType="Float NOT NULL")]
		public double EastExtent
		{
			get
			{
				return this._EastExtent;
			}
			set
			{
				if ((this._EastExtent != value))
				{
					this.OnEastExtentChanging(value);
					this.SendPropertyChanging();
					this._EastExtent = value;
					this.SendPropertyChanged("EastExtent");
					this.OnEastExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SouthExtent", DbType="Float NOT NULL")]
		public double SouthExtent
		{
			get
			{
				return this._SouthExtent;
			}
			set
			{
				if ((this._SouthExtent != value))
				{
					this.OnSouthExtentChanging(value);
					this.SendPropertyChanging();
					this._SouthExtent = value;
					this.SendPropertyChanged("SouthExtent");
					this.OnSouthExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WestExtent", DbType="Float NOT NULL")]
		public double WestExtent
		{
			get
			{
				return this._WestExtent;
			}
			set
			{
				if ((this._WestExtent != value))
				{
					this.OnWestExtentChanging(value);
					this.SendPropertyChanging();
					this._WestExtent = value;
					this.SendPropertyChanged("WestExtent");
					this.OnWestExtentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDescription", DbType="NVarChar(MAX)")]
		public string RegionDescription
		{
			get
			{
				return this._RegionDescription;
			}
			set
			{
				if ((this._RegionDescription != value))
				{
					this.OnRegionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RegionDescription = value;
					this.SendPropertyChanged("RegionDescription");
					this.OnRegionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionMapCSSURL", DbType="NVarChar(500)")]
		public string RegionMapCSSURL
		{
			get
			{
				return this._RegionMapCSSURL;
			}
			set
			{
				if ((this._RegionMapCSSURL != value))
				{
					this.OnRegionMapCSSURLChanging(value);
					this.SendPropertyChanging();
					this._RegionMapCSSURL = value;
					this.SendPropertyChanged("RegionMapCSSURL");
					this.OnRegionMapCSSURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapServiceMetadata")]
	public partial class MapServiceMetadata
	{
		
		private int _MapServiceID;
		
		private string _MetadataTitle;
		
		private string _MetadataContent;
		
		private System.Nullable<int> _DisplayOrder;
		
		public MapServiceMetadata()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapServiceID", DbType="Int NOT NULL")]
		public int MapServiceID
		{
			get
			{
				return this._MapServiceID;
			}
			set
			{
				if ((this._MapServiceID != value))
				{
					this._MapServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MetadataTitle
		{
			get
			{
				return this._MetadataTitle;
			}
			set
			{
				if ((this._MetadataTitle != value))
				{
					this._MetadataTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MetadataContent
		{
			get
			{
				return this._MetadataContent;
			}
			set
			{
				if ((this._MetadataContent != value))
				{
					this._MetadataContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ODMDatabaseMetadata")]
	public partial class ODMDatabaseMetadata
	{
		
		private int _DatabaseID;
		
		private string _MetadataTitle;
		
		private string _MetadataContent;
		
		private System.Nullable<int> _DisplayOrder;
		
		public ODMDatabaseMetadata()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseID", DbType="Int NOT NULL")]
		public int DatabaseID
		{
			get
			{
				return this._DatabaseID;
			}
			set
			{
				if ((this._DatabaseID != value))
				{
					this._DatabaseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MetadataTitle
		{
			get
			{
				return this._MetadataTitle;
			}
			set
			{
				if ((this._MetadataTitle != value))
				{
					this._MetadataTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MetadataContent
		{
			get
			{
				return this._MetadataContent;
			}
			set
			{
				if ((this._MetadataContent != value))
				{
					this._MetadataContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionMetadata")]
	public partial class RegionMetadata
	{
		
		private int _RegionID;
		
		private string _MetadataTitle;
		
		private string _MetadataContent;
		
		private System.Nullable<int> _DisplayOrder;
		
		public RegionMetadata()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this._RegionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MetadataTitle
		{
			get
			{
				return this._MetadataTitle;
			}
			set
			{
				if ((this._MetadataTitle != value))
				{
					this._MetadataTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetadataContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MetadataContent
		{
			get
			{
				return this._MetadataContent;
			}
			set
			{
				if ((this._MetadataContent != value))
				{
					this._MetadataContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
